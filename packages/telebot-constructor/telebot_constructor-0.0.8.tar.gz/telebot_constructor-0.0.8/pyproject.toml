[tool.poetry]
name = "telebot-constructor"
version = "0.0.8"
description = "No-code Telegram bot constructor"
authors = ["Igor Vaiman <gosha.vaiman@gmail.com>"]
license = "GPL-3"
readme = "README.md"
packages = [{include = "telebot_constructor"}]
include = ["telebot_constructor/static/**/*"]

[tool.poetry.group.dev.dependencies]
pyproject-flake8 = "^6.0.0.post1"
pytest = "^7.4.0"
coverage = "^7.3.0"
dictdiffer = "^0.9.0"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
dirty = false
style="semver"

[tool.poetry.dependencies]
python = "^3.10"
telebot-components = "^0.8.15"
pydantic = "^2.0.3"
aiohttp-swagger = "^1.0.16"
telebot-against-war = "^0.6.9"

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
pytest-aiohttp = "1.0.4"
pytest-asyncio = "^0.18.3"
python-dotenv = "^0.20.0"
aioresponses = "0.7.3"
black = "^22.3.0"
isort = "^5.10.1"
pre-commit = "^2.19.0"
mypy = "^1.4.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.isort]
profile = 'black'

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.mypy]
incremental = false
files = '.'

[tool.flake8]
max-line-length = 120
extend-ignore = [
    "F841",  # local variable 'xxx' is assigned to but never used
    "E203",  # whitespace before ':' (black formatting compatibility)
]

[tool.coverage.report]
omit = ['tests/**',]
skip_covered = true
show_missing = true
fail_under = 95
exclude_lines = [
    # re-enable the standard pragma
    'pragma: no cover',
    # non-runnable code
    'if __name__ == .__main__.:',
    # abstract methods aren't run:
    '@(abc\.)?abstractmethod',
    # ellipsis is used in abstract method bodies
    '\.\.\.',
    # stub methods
    'raise NotImplementedError()',
]
