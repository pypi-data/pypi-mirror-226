# Generated by Django 4.2.1 on 2023-08-19 17:24

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=400, unique=True, validators=[django.core.validators.RegexValidator(message='identifier doesnt match condition ^[A-Za-z0-9\\.\\-:_,=\\/@]+$', regex='^[A-Za-z0-9\\.\\-:_,=\\/@]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=400, validators=[django.core.validators.RegexValidator(message='name doesnt match condition ^[A-Za-z0-9/\\-_:,\\s@\\.]+$', regex='^[A-Za-z0-9/\\-_:,\\s@\\.]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('slug', models.SlugField()),
                ('attrs', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'CID',
                'verbose_name_plural': 'CID',
            },
        ),
        migrations.CreateModel(
            name='OID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=400, unique=True, validators=[django.core.validators.RegexValidator(message='identifier doesnt match condition ^[A-Za-z0-9\\.\\-:_,=\\/@]+$', regex='^[A-Za-z0-9\\.\\-:_,=\\/@]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=400, validators=[django.core.validators.RegexValidator(message='name doesnt match condition ^[A-Za-z0-9/\\-_:,\\s@\\.]+$', regex='^[A-Za-z0-9/\\-_:,\\s@\\.]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('slug', models.SlugField()),
                ('attrs', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'OID',
                'verbose_name_plural': 'OID',
            },
        ),
        migrations.CreateModel(
            name='Outpost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=400, unique=True, validators=[django.core.validators.RegexValidator(message='identifier doesnt match condition ^[A-Za-z0-9\\.\\-:_,=\\/@]+$', regex='^[A-Za-z0-9\\.\\-:_,=\\/@]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('msg_queue_info', models.JSONField(default=dict)),
                ('msg', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('P', 'PENDING'), ('I', 'IN-PROGRESS'), ('E', 'ERROR'), ('C', 'COMPLETED')], default='P', max_length=1)),
                ('attempts', models.IntegerField(default=0)),
                ('debug_info', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'Outpost',
                'verbose_name_plural': 'Outpost',
            },
        ),
        migrations.CreateModel(
            name='PID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=400, unique=True, validators=[django.core.validators.RegexValidator(message='identifier doesnt match condition ^[A-Za-z0-9\\.\\-:_,=\\/@]+$', regex='^[A-Za-z0-9\\.\\-:_,=\\/@]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=400, validators=[django.core.validators.RegexValidator(message='name doesnt match condition ^[A-Za-z0-9/\\-_:,\\s@\\.]+$', regex='^[A-Za-z0-9/\\-_:,\\s@\\.]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('slug', models.SlugField()),
                ('attrs', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'PID',
                'verbose_name_plural': 'PID',
            },
        ),
        migrations.CreateModel(
            name='TID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=400, unique=True, validators=[django.core.validators.RegexValidator(message='identifier doesnt match condition ^[A-Za-z0-9\\.\\-:_,=\\/@]+$', regex='^[A-Za-z0-9\\.\\-:_,=\\/@]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=400, validators=[django.core.validators.RegexValidator(message='name doesnt match condition ^[A-Za-z0-9/\\-_:,\\s@\\.]+$', regex='^[A-Za-z0-9/\\-_:,\\s@\\.]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('slug', models.SlugField()),
                ('attrs', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'TID',
                'verbose_name_plural': 'TID',
            },
        ),
        migrations.CreateModel(
            name='UID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=400, unique=True, validators=[django.core.validators.RegexValidator(message='identifier doesnt match condition ^[A-Za-z0-9\\.\\-:_,=\\/@]+$', regex='^[A-Za-z0-9\\.\\-:_,=\\/@]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=400, validators=[django.core.validators.RegexValidator(message='name doesnt match condition ^[A-Za-z0-9/\\-_:,\\s@\\.]+$', regex='^[A-Za-z0-9/\\-_:,\\s@\\.]+$'), django.core.validators.MaxLengthValidator(400), django.core.validators.MinLengthValidator(1)])),
                ('slug', models.SlugField()),
                ('attrs', models.JSONField(default=dict)),
            ],
            options={
                'verbose_name': 'UID',
                'verbose_name_plural': 'UID',
            },
        ),
    ]
