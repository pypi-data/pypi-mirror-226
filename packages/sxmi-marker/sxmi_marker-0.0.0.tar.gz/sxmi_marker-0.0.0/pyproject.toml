[build-system] # https://python-poetry.org/docs/pyproject/#poetry-and-pep-517
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry] # https://python-poetry.org/docs/pyproject/
name = "sxmi-marker"
version = "0.0.0"
description = "Generates markers for SXMI modules"
authors = ["Oguzhan Mete Ozturk <metozturk@me.com>"]
readme = "README.md"
repository = "https://github.com/Stroma-Vision/sxmi-marker"
include = ["src/sxmi_marker/ARUCO_DICT_7X7_1000.npz"]

[tool.commitizen] # https://commitizen-tools.github.io/commitizen/config/
bump_message = "bump(release): v$current_version â†’ v$new_version"
tag_format = "v$version"
update_changelog_on_bump = true
version = "0.0.0"
version_files = ["pyproject.toml:version"]

[tool.poetry.scripts] # https://python-poetry.org/docs/pyproject/#scripts
sxmi-marker = "sxmi_marker.cli:app"

[tool.poetry.dependencies] # https://python-poetry.org/docs/dependency-specification/
python = "^3.10"
typer = { extras = ["all"], version = "0.9.0" }
numpy = "^1.25.2"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies] # https://python-poetry.org/docs/master/managing-dependencies/
absolufy-imports = "0.3.1"
black = "23.7.0"
commitizen = "3.6.0"
coverage = { extras = ["toml"], version = "7.3.0" }
mypy = "1.5.1"
poethepoet = "0.22.0"
pre-commit = "3.3.3"
pytest = "7.4.0"
pytest-clarity = "1.0.1"
pytest-mock = "3.11.1"
pytest-xdist = "3.3.1"
ruff = "0.0.284"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies] # https://python-poetry.org/docs/master/managing-dependencies/
cruft = "2.15.0"
pdoc = "14.0.0"

[tool.black] # https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
line-length = 120
target-version = ["py310"]

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html#report
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run] # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml] # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.mypy] # https://mypy.readthedocs.io/en/latest/config_file.html
junit_xml = "reports/mypy.xml"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options] # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --verbosity=2 --junitxml=reports/pytest.xml"
testpaths = ["src", "tests"]
xfail_strict = true

[tool.ruff] # https://github.com/charliermarsh/ruff
fix = true
ignore-init-module-imports = true
line-length = 120
select = ["A", "B", "C4", "C90", "D", "DTZ", "E", "F", "I", "ISC", "N", "PGH", "PIE", "PLC", "PLE", "PLR", "PLW", "PT", "RET", "RUF", "SIM", "TID", "UP", "W", "YTT"]
ignore = ["E501", "PGH001", "PGH002", "PGH003", "RET504", "S101"]
extend-ignore = ["B008", "D203", "D204", "D213", "D215", "D400", "D401", "D404", "D406", "D407", "D408", "D409", "D413"]                                              # https://www.pydocstyle.org/en/stable/error_codes.html
unfixable = ["F401", "F841"]
src = ["src", "tests"]
target-version = "py310"

[tool.poe.tasks] # https://github.com/nat-n/poethepoet

[tool.poe.tasks.docs]
help = "Generate this package's docs"
cmd = """
    pdoc
      --docformat $docformat
      --output-directory $outputdirectory
      sxmi_marker
    """

[[tool.poe.tasks.docs.args]]
help = "The docstring style (default: google)"
name = "docformat"
options = ["--docformat"]
default = "google"

[[tool.poe.tasks.docs.args]]
help = "The output directory (default: docs)"
name = "outputdirectory"
options = ["--output-directory"]
default = "docs"

[tool.poe.tasks.lint]
help = "Lint this package"

[[tool.poe.tasks.lint.sequence]]
cmd = """
      pre-commit run
        --all-files
        --color always
      """

[tool.poe.tasks.test]
help = "Test this package"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage run"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage report"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage xml"
