[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "xbrl-filings-api"
dynamic = ["version"]
description = 'Python API for filings.xbrl.org XBRL report repository.'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = [
    "XBRL", "ESEF", "JSON", "JSON-API", "IFRS", "annual financial report",
    "AFR", "financial statement", "accounting", "consolidated",
    "consolidation", "structured data", "listed company", "stock exchange",
    "regulated markets", "EU", "European Union", "transparency", "iXBRL",
    "Inline XBRL", "ESMA", "financial analysis", "accounting quality",
    "financial statement analysis", "Extensible Business Reporting Language",
    "European Single Electronic Format",
]
authors = [
  { name = "Lauri Salmela", email = "lauri.m.salmela@gmail.com" },
]
classifiers = [
    "Development Status :: 1 - Planning",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python",
    "Programming Language :: SQL",
    "Operating System :: OS Independent",
    "Framework :: AsyncIO",
    "Framework :: Flake8",
    "Framework :: Hatch",
    "Framework :: Pytest",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Topic :: File Formats :: JSON",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "requests",
]

[project.urls]
Homepage = "https://github.com/lsalmela/xbrl-filings-api"
Documentation = "https://github.com/lsalmela/xbrl-filings-api#readme"
Source = "https://github.com/lsalmela/xbrlfilingsapi"
Issues = "https://github.com/lsalmela/xbrl-filings-api/issues"

[tool.hatch.version]
path = "src/xbrl_filings_api/__about__.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/docs",
]

[tool.hatch.build.targets.wheel]
packages = ["src/xbrl_filings_api"]

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "responses",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.7.0",
  "mypy>=1.5.1",
  "ruff>=0.0.285",
]
[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/xbrl_filings_api tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
target-version = ["py39"]
line-length = 79
skip-string-normalization = true

[tool.ruff]
target-version = "py39"
line-length = 79
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["xbrl_filings_api"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["xbrl_filings_api", "tests"]
branch = true
parallel = true
omit = [
  "src/xbrl_filings_api/__about__.py",
]

[tool.coverage.paths]
xbrl_filings_api = ["src/xbrl_filings_api", "*/xbrl-filings-api/src/xbrl_filings_api"]
tests = ["tests", "*/xbrl-filings-api/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
