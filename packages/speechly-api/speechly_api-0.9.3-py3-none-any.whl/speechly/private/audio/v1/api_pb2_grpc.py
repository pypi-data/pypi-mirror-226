# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from speechly.private.audio.v1 import api_pb2 as speechly_dot_private_dot_audio_dot_v1_dot_api__pb2


class AudioAnalyzerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.DetectLanguage = channel.unary_unary(
        '/speechly.private.audio.v1.AudioAnalyzer/DetectLanguage',
        request_serializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.DetectLanguageRequest.SerializeToString,
        response_deserializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.DetectLanguageResponse.FromString,
        )
    self.PunctuateTranscript = channel.unary_unary(
        '/speechly.private.audio.v1.AudioAnalyzer/PunctuateTranscript',
        request_serializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.PunctuateTranscriptRequest.SerializeToString,
        response_deserializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.PunctuateTranscriptResponse.FromString,
        )
    self.DetectAudioEvent = channel.stream_stream(
        '/speechly.private.audio.v1.AudioAnalyzer/DetectAudioEvent',
        request_serializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.DetectAudioEventRequest.SerializeToString,
        response_deserializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.DetectAudioEventResponse.FromString,
        )


class AudioAnalyzerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def DetectLanguage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PunctuateTranscript(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DetectAudioEvent(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AudioAnalyzerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'DetectLanguage': grpc.unary_unary_rpc_method_handler(
          servicer.DetectLanguage,
          request_deserializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.DetectLanguageRequest.FromString,
          response_serializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.DetectLanguageResponse.SerializeToString,
      ),
      'PunctuateTranscript': grpc.unary_unary_rpc_method_handler(
          servicer.PunctuateTranscript,
          request_deserializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.PunctuateTranscriptRequest.FromString,
          response_serializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.PunctuateTranscriptResponse.SerializeToString,
      ),
      'DetectAudioEvent': grpc.stream_stream_rpc_method_handler(
          servicer.DetectAudioEvent,
          request_deserializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.DetectAudioEventRequest.FromString,
          response_serializer=speechly_dot_private_dot_audio_dot_v1_dot_api__pb2.DetectAudioEventResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'speechly.private.audio.v1.AudioAnalyzer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
