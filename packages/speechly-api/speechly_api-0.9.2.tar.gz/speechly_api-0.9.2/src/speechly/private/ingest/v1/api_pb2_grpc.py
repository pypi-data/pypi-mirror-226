# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from speechly.private.ingest.v1 import api_pb2 as speechly_dot_private_dot_ingest_dot_v1_dot_api__pb2


class AudioAPIStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StoreAudio = channel.stream_unary(
        '/speechly.private.ingest.v1.AudioAPI/StoreAudio',
        request_serializer=speechly_dot_private_dot_ingest_dot_v1_dot_api__pb2.StoreAudioRequest.SerializeToString,
        response_deserializer=speechly_dot_private_dot_ingest_dot_v1_dot_api__pb2.StoreAudioResponse.FromString,
        )


class AudioAPIServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StoreAudio(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AudioAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StoreAudio': grpc.stream_unary_rpc_method_handler(
          servicer.StoreAudio,
          request_deserializer=speechly_dot_private_dot_ingest_dot_v1_dot_api__pb2.StoreAudioRequest.FromString,
          response_serializer=speechly_dot_private_dot_ingest_dot_v1_dot_api__pb2.StoreAudioResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'speechly.private.ingest.v1.AudioAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
