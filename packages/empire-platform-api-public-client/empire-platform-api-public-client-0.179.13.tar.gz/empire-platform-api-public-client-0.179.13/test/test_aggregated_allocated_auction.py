# coding: utf-8

"""
    Empire - Platform API

    OpenAPI specification for the Platform REST API of Empire  **System Time:** Europe/Amsterdam  **General data formats:**   * _capacity values_ => kW (integers)   * _dates and local times_ => System Time   * _currencies_ => EUR   # noqa: E501

    The version of the OpenAPI document: 0.179.13
    Contact: britned.info@britned.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import empire_platform_api_public_client
from empire_platform_api_public_client.models.aggregated_allocated_auction import AggregatedAllocatedAuction  # noqa: E501
from empire_platform_api_public_client.rest import ApiException

class TestAggregatedAllocatedAuction(unittest.TestCase):
    """AggregatedAllocatedAuction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AggregatedAllocatedAuction
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AggregatedAllocatedAuction`
        """
        model = empire_platform_api_public_client.models.aggregated_allocated_auction.AggregatedAllocatedAuction()  # noqa: E501
        if include_optional :
            return AggregatedAllocatedAuction(
                timescale = 'LONG_TERM', 
                auction_count = 0, 
                product_type_count = 0, 
                border_direction = 'GB_NL', 
                delivery_period = empire_platform_api_public_client.models.mtu_period.MtuPeriod(
                    from_mtu_start = '2022-01-04T10:00Z', 
                    to_mtu_end = '2022-01-04T11:00Z', ), 
                participant_requested_count = 0, 
                participant_allocated_count = 0, 
                offered_capacity = 56, 
                total_requested_capacity = 56, 
                total_allocated_capacity = 56, 
                average_clearing_price = 1.337
            )
        else :
            return AggregatedAllocatedAuction(
                timescale = 'LONG_TERM',
                auction_count = 0,
                product_type_count = 0,
                border_direction = 'GB_NL',
                delivery_period = empire_platform_api_public_client.models.mtu_period.MtuPeriod(
                    from_mtu_start = '2022-01-04T10:00Z', 
                    to_mtu_end = '2022-01-04T11:00Z', ),
                participant_requested_count = 0,
                participant_allocated_count = 0,
                offered_capacity = 56,
                total_requested_capacity = 56,
                total_allocated_capacity = 56,
                average_clearing_price = 1.337,
        )
        """

    def testAggregatedAllocatedAuction(self):
        """Test AggregatedAllocatedAuction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
