# coding: utf-8

"""
    Empire - Platform API

    OpenAPI specification for the Platform REST API of Empire  **System Time:** Europe/Amsterdam  **General data formats:**   * _capacity values_ => kW (integers)   * _dates and local times_ => System Time   * _currencies_ => EUR   # noqa: E501

    The version of the OpenAPI document: 0.179.12
    Contact: britned.info@britned.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import empire_platform_api_public_client
from empire_platform_api_public_client.models.created_secondary_market_long_term_transfer_request import CreatedSecondaryMarketLongTermTransferRequest  # noqa: E501
from empire_platform_api_public_client.rest import ApiException

class TestCreatedSecondaryMarketLongTermTransferRequest(unittest.TestCase):
    """CreatedSecondaryMarketLongTermTransferRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreatedSecondaryMarketLongTermTransferRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreatedSecondaryMarketLongTermTransferRequest`
        """
        model = empire_platform_api_public_client.models.created_secondary_market_long_term_transfer_request.CreatedSecondaryMarketLongTermTransferRequest()  # noqa: E501
        if include_optional :
            return CreatedSecondaryMarketLongTermTransferRequest(
                id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09'
            )
        else :
            return CreatedSecondaryMarketLongTermTransferRequest(
                id = '8d3787bb-b9ce-4d75-9a75-074ddd5d1e09',
        )
        """

    def testCreatedSecondaryMarketLongTermTransferRequest(self):
        """Test CreatedSecondaryMarketLongTermTransferRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
