[tool.poetry]
name = "pyonwater"
version = "0.1.1"
description = "EyeOnWater client library."
authors = ["Konstantin Deev <kn.deev@gmail.com>"]
license = "MIT"
readme = "README.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = "^3.8.5"
tenacity = "^8.2.3"
pytz = "^2023.3"
python-dateutil = "^2.8.2"

[tool.black]
target-version = ["py39", "py310"]
exclude = 'generated'

[tool.isort]
# https://github.com/PyCQA/isort/wiki/isort-Settings
profile = "black"
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
known_first_party = [
    "homeassistant",
    "tests",
]
forced_separate = [
    "tests",
]
combine_as_imports = true

[tool.ruff]
# The contents of this file is based on https://github.com/home-assistant/core/blob/dev/pyproject.toml

target-version = "py310"

select = ["ALL"]

# All the ones without a comment were the ones that are currently violated
# by the codebase. The plan is to fix them all (when sensible) and then enable them.
ignore = [
    #"ANN",
    #"ANN101",  # Missing type annotation for {name} in method
    #"ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in {name}
    #"D401",    # First line of docstring should be in imperative mood
    #"E501",    # line too long
    #"FBT001",  # Boolean positional arg in function definition
    #"FBT002",  # Boolean default value in function definition
    #"FIX004",  # Line contains HACK, consider resolving the issue
    #"PD901",   # df is a bad variable name. Be kinder to your future self.
    #"PERF203",# `try`-`except` within a loop incurs performance overhead
    #"PLR0913", # Too many arguments to function call (N > 5)
    #"PLR2004", # Magic value used in comparison, consider replacing X with a constant variable
    #"S101",    # Use of assert detected
    #"SLF001",  # Private member accessed
]

[per-file-ignores]
"tests/*.py" = ["ALL"]
".github/*py" = ["INP001"]

[flake8-pytest-style]
fixture-parentheses = false

[pyupgrade]
keep-runtime-typing = true

[mccabe]
max-complexity = 25
