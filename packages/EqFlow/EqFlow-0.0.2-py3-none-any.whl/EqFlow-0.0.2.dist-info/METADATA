Metadata-Version: 2.1
Name: EqFlow
Version: 0.0.2
Summary: Introducing EqFlow: Your all-in-one solution for efficient web scraping, AI development, and more. Streamline your projects with its intuitive API, eliminating the need for multiple libraries like requests and bs4. EqFlow's lightning-fast performance and simplified syntax redefine coding, making tasks that once required extensive code a breeze. Elevate your coding experience, embrace efficiency, and unlock your true creative potential with EqFlow.
Author: Stutya Patwal
Author-email: stutyapatwal@gmail.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Description-Content-Type: text/markdown
Requires-Dist: requests
Requires-Dist: bs4
Requires-Dist: nltk
Requires-Dist: scikit-learn
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: textblob

# EqFlow Documentation

## Eqre Module - Web Scraping with BeautifulSoup

**Note:** The modules are imported as (in this example):

```from EqFlow import Eqre as eqre```
```from EqFlow import Eqre as eqai```

**Verify URL Validity:**
```eqre.verify_url(url)```

**Get BeautifulSoup Object:**
```soup = eqre.get_soup(url)```

**Get Raw Text Content:**
```raw_text = eqre.get_raw_text(soup)```

**Get Processed Text Content:**
```processed_text = eqre.get_processed_text(soup)```

**Find Specific Elements:**
```found_element = eqre.find(url, id="yKMVIe")```

## Eqai Module - AI Operations

**Tokenization:**
```tokens = eqai.tokenize_text(input_text)```

**Part-of-Speech Tagging:**
```pos_tags = eqai.pos_tagging(input_text)```

**Named Entity Recognition (NER):**
```named_entities = eqai.named_entity_recognition(input_text)```

**Sentiment Analysis:**
```sentiment = eqai.sentiment_analysis(input_text)```

**Text Summarization:**
```summary = eqai.text_summarization(input_text)```
