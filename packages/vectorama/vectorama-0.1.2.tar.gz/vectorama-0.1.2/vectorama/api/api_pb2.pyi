"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import sys
import typing

import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _FieldType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _FieldTypeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_FieldType.ValueType],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    String: _FieldType.ValueType  # 0
    Int: _FieldType.ValueType  # 1
    UUID: _FieldType.ValueType  # 2
    Embedding: _FieldType.ValueType  # 3

class FieldType(_FieldType, metaclass=_FieldTypeEnumTypeWrapper): ...

String: FieldType.ValueType  # 0
Int: FieldType.ValueType  # 1
UUID: FieldType.ValueType  # 2
Embedding: FieldType.ValueType  # 3
global___FieldType = FieldType

class _OperationType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OperationTypeEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _OperationType.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    Equal: _OperationType.ValueType  # 0
    NotEqual: _OperationType.ValueType  # 1
    GreaterThan: _OperationType.ValueType  # 2
    GreaterThanOrEqual: _OperationType.ValueType  # 3
    LessThan: _OperationType.ValueType  # 4
    LessThanOrEqual: _OperationType.ValueType  # 6

class OperationType(_OperationType, metaclass=_OperationTypeEnumTypeWrapper): ...

Equal: OperationType.ValueType  # 0
NotEqual: OperationType.ValueType  # 1
GreaterThan: OperationType.ValueType  # 2
GreaterThanOrEqual: OperationType.ValueType  # 3
LessThan: OperationType.ValueType  # 4
LessThanOrEqual: OperationType.ValueType  # 6
global___OperationType = OperationType

@typing_extensions.final
class RegisterSchemaRequest(google.protobuf.message.Message):
    """
    Request/Response Types
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCHEMA_FIELD_NUMBER: builtins.int
    @property
    def schema(self) -> global___Schema: ...
    def __init__(
        self,
        *,
        schema: global___Schema | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["schema", b"schema"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["schema", b"schema"]
    ) -> None: ...

global___RegisterSchemaRequest = RegisterSchemaRequest

@typing_extensions.final
class RegisterSchemaResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUCCESS_FIELD_NUMBER: builtins.int
    ERRORMESSAGE_FIELD_NUMBER: builtins.int
    SCHEMA_FIELD_NUMBER: builtins.int
    success: builtins.bool
    errorMessage: builtins.str
    @property
    def schema(self) -> global___Schema:
        """Processed schema is echoed back with the ID and name set"""
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        errorMessage: builtins.str = ...,
        schema: global___Schema | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing_extensions.Literal["schema", b"schema"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "errorMessage", b"errorMessage", "schema", b"schema", "success", b"success"
        ],
    ) -> None: ...

global___RegisterSchemaResponse = RegisterSchemaResponse

@typing_extensions.final
class InsertVectorsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCHEMAID_FIELD_NUMBER: builtins.int
    RECORDS_FIELD_NUMBER: builtins.int
    schemaId: builtins.int
    @property
    def records(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Record
    ]: ...
    def __init__(
        self,
        *,
        schemaId: builtins.int = ...,
        records: collections.abc.Iterable[global___Record] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "records", b"records", "schemaId", b"schemaId"
        ],
    ) -> None: ...

global___InsertVectorsRequest = InsertVectorsRequest

@typing_extensions.final
class InsertVectorsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUCCESS_FIELD_NUMBER: builtins.int
    ERRORMESSAGE_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    success: builtins.bool
    errorMessage: builtins.str
    @property
    def ids(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """IDS are returned in the same order as the request"""
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        errorMessage: builtins.str = ...,
        ids: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "errorMessage", b"errorMessage", "ids", b"ids", "success", b"success"
        ],
    ) -> None: ...

global___InsertVectorsResponse = InsertVectorsResponse

@typing_extensions.final
class DeleteVectorsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCHEMAID_FIELD_NUMBER: builtins.int
    IDS_FIELD_NUMBER: builtins.int
    schemaId: builtins.int
    @property
    def ids(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.int
    ]: ...
    def __init__(
        self,
        *,
        schemaId: builtins.int = ...,
        ids: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal["ids", b"ids", "schemaId", b"schemaId"],
    ) -> None: ...

global___DeleteVectorsRequest = DeleteVectorsRequest

@typing_extensions.final
class DeleteVectorsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUCCESS_FIELD_NUMBER: builtins.int
    ERRORMESSAGE_FIELD_NUMBER: builtins.int
    success: builtins.bool
    errorMessage: builtins.str
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        errorMessage: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "errorMessage", b"errorMessage", "success", b"success"
        ],
    ) -> None: ...

global___DeleteVectorsResponse = DeleteVectorsResponse

@typing_extensions.final
class SearchVectorsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class FilterDefinition(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        OPERATION_FIELD_NUMBER: builtins.int
        name: builtins.str
        @property
        def value(self) -> global___MetadataValue: ...
        operation: global___OperationType.ValueType
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            value: global___MetadataValue | None = ...,
            operation: global___OperationType.ValueType = ...,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions.Literal["value", b"value"]
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "name", b"name", "operation", b"operation", "value", b"value"
            ],
        ) -> None: ...

    SCHEMAID_FIELD_NUMBER: builtins.int
    QUERYVECTOR_FIELD_NUMBER: builtins.int
    FILTERS_FIELD_NUMBER: builtins.int
    RETURNMETADATA_FIELD_NUMBER: builtins.int
    RETURNEMBEDDINGS_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    schemaId: builtins.int
    @property
    def queryVector(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.float
    ]: ...
    @property
    def filters(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___SearchVectorsRequest.FilterDefinition
    ]: ...
    returnMetadata: builtins.bool
    returnEmbeddings: builtins.bool
    limit: builtins.int
    def __init__(
        self,
        *,
        schemaId: builtins.int = ...,
        queryVector: collections.abc.Iterable[builtins.float] | None = ...,
        filters: collections.abc.Iterable[
            global___SearchVectorsRequest.FilterDefinition
        ]
        | None = ...,
        returnMetadata: builtins.bool = ...,
        returnEmbeddings: builtins.bool = ...,
        limit: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "filters",
            b"filters",
            "limit",
            b"limit",
            "queryVector",
            b"queryVector",
            "returnEmbeddings",
            b"returnEmbeddings",
            "returnMetadata",
            b"returnMetadata",
            "schemaId",
            b"schemaId",
        ],
    ) -> None: ...

global___SearchVectorsRequest = SearchVectorsRequest

@typing_extensions.final
class SearchVectorsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class SearchResult(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        VECTOR_FIELD_NUMBER: builtins.int
        DISTANCE_FIELD_NUMBER: builtins.int
        @property
        def vector(self) -> global___Record: ...
        distance: builtins.float
        def __init__(
            self,
            *,
            vector: global___Record | None = ...,
            distance: builtins.float = ...,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions.Literal["vector", b"vector"]
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "distance", b"distance", "vector", b"vector"
            ],
        ) -> None: ...

    SUCCESS_FIELD_NUMBER: builtins.int
    ERRORMESSAGE_FIELD_NUMBER: builtins.int
    RESULTS_FIELD_NUMBER: builtins.int
    success: builtins.bool
    errorMessage: builtins.str
    @property
    def results(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___SearchVectorsResponse.SearchResult
    ]: ...
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        errorMessage: builtins.str = ...,
        results: collections.abc.Iterable[global___SearchVectorsResponse.SearchResult]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "errorMessage",
            b"errorMessage",
            "results",
            b"results",
            "success",
            b"success",
        ],
    ) -> None: ...

global___SearchVectorsResponse = SearchVectorsResponse

@typing_extensions.final
class GetSchemasRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IDS_FIELD_NUMBER: builtins.int
    NAMES_FIELD_NUMBER: builtins.int
    RETURNCLUSTERS_FIELD_NUMBER: builtins.int
    @property
    def ids(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """If specified, will limit the response to only the schemas with the given ids
        Otherwise all schemas will be returned
        """
    @property
    def names(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.str
    ]: ...
    returnClusters: builtins.bool
    def __init__(
        self,
        *,
        ids: collections.abc.Iterable[builtins.int] | None = ...,
        names: collections.abc.Iterable[builtins.str] | None = ...,
        returnClusters: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "ids", b"ids", "names", b"names", "returnClusters", b"returnClusters"
        ],
    ) -> None: ...

global___GetSchemasRequest = GetSchemasRequest

@typing_extensions.final
class GetSchemasResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ClusterDefinition(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        CENTROID_FIELD_NUMBER: builtins.int
        COUNTMEMBERS_FIELD_NUMBER: builtins.int
        @property
        def centroid(
            self,
        ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
            builtins.float
        ]: ...
        countMembers: builtins.int
        def __init__(
            self,
            *,
            centroid: collections.abc.Iterable[builtins.float] | None = ...,
            countMembers: builtins.int = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "centroid", b"centroid", "countMembers", b"countMembers"
            ],
        ) -> None: ...

    @typing_extensions.final
    class SchemaDefinition(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        DESIREDCLUSTERCOUNT_FIELD_NUMBER: builtins.int
        DESIREDCLUSTERSIZE_FIELD_NUMBER: builtins.int
        CHUNKSIZE_FIELD_NUMBER: builtins.int
        CURRENTCLUSTERS_FIELD_NUMBER: builtins.int
        EMBEDDINGDIMENSION_FIELD_NUMBER: builtins.int
        CACHEHITS_FIELD_NUMBER: builtins.int
        CACHEMISSES_FIELD_NUMBER: builtins.int
        CLUSTERS_FIELD_NUMBER: builtins.int
        FIELDS_FIELD_NUMBER: builtins.int
        id: builtins.int
        name: builtins.str
        desiredClusterCount: builtins.int
        desiredClusterSize: builtins.int
        chunkSize: builtins.int
        currentClusters: builtins.int
        embeddingDimension: builtins.int
        cacheHits: builtins.int
        cacheMisses: builtins.int
        @property
        def clusters(
            self,
        ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
            global___GetSchemasResponse.ClusterDefinition
        ]: ...
        @property
        def fields(
            self,
        ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
            global___MetadataField
        ]: ...
        def __init__(
            self,
            *,
            id: builtins.int = ...,
            name: builtins.str = ...,
            desiredClusterCount: builtins.int = ...,
            desiredClusterSize: builtins.int = ...,
            chunkSize: builtins.int = ...,
            currentClusters: builtins.int = ...,
            embeddingDimension: builtins.int = ...,
            cacheHits: builtins.int = ...,
            cacheMisses: builtins.int = ...,
            clusters: collections.abc.Iterable[
                global___GetSchemasResponse.ClusterDefinition
            ]
            | None = ...,
            fields: collections.abc.Iterable[global___MetadataField] | None = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "cacheHits",
                b"cacheHits",
                "cacheMisses",
                b"cacheMisses",
                "chunkSize",
                b"chunkSize",
                "clusters",
                b"clusters",
                "currentClusters",
                b"currentClusters",
                "desiredClusterCount",
                b"desiredClusterCount",
                "desiredClusterSize",
                b"desiredClusterSize",
                "embeddingDimension",
                b"embeddingDimension",
                "fields",
                b"fields",
                "id",
                b"id",
                "name",
                b"name",
            ],
        ) -> None: ...

    SUCCESS_FIELD_NUMBER: builtins.int
    ERRORMESSAGE_FIELD_NUMBER: builtins.int
    SCHEMAS_FIELD_NUMBER: builtins.int
    success: builtins.bool
    errorMessage: builtins.str
    @property
    def schemas(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___GetSchemasResponse.SchemaDefinition
    ]: ...
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        errorMessage: builtins.str = ...,
        schemas: collections.abc.Iterable[global___GetSchemasResponse.SchemaDefinition]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "errorMessage",
            b"errorMessage",
            "schemas",
            b"schemas",
            "success",
            b"success",
        ],
    ) -> None: ...

global___GetSchemasResponse = GetSchemasResponse

@typing_extensions.final
class DestroyAllRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DestroyAllRequest = DestroyAllRequest

@typing_extensions.final
class DestroyAllResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SUCCESS_FIELD_NUMBER: builtins.int
    ERRORMESSAGE_FIELD_NUMBER: builtins.int
    success: builtins.bool
    errorMessage: builtins.str
    def __init__(
        self,
        *,
        success: builtins.bool = ...,
        errorMessage: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "errorMessage", b"errorMessage", "success", b"success"
        ],
    ) -> None: ...

global___DestroyAllResponse = DestroyAllResponse

@typing_extensions.final
class Record(google.protobuf.message.Message):
    """
    General Types
    Used across multiple request/response definitions
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    EMBEDDING_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    id: builtins.int
    """Supplied internally at insertion time
    Client supplied values will be ignored
    """
    @property
    def embedding(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.float
    ]:
        """A vector is made up of exactly one embedding"""
    @property
    def metadata(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___MetadataValue
    ]:
        """Metadata is echoed back in the order that it's defined in the schema
        We exclude sending keys constantly over the wire since this is a redundant
        read for fixed data
        """
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        embedding: collections.abc.Iterable[builtins.float] | None = ...,
        metadata: collections.abc.Iterable[global___MetadataValue] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "embedding", b"embedding", "id", b"id", "metadata", b"metadata"
        ],
    ) -> None: ...

global___Record = Record

@typing_extensions.final
class MetadataValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STRINGVALUE_FIELD_NUMBER: builtins.int
    INTVALUE_FIELD_NUMBER: builtins.int
    UUIDVALUE_FIELD_NUMBER: builtins.int
    stringValue: builtins.str
    """Polymorphic value to store different type definitions"""
    intValue: builtins.int
    uuidValue: builtins.str
    def __init__(
        self,
        *,
        stringValue: builtins.str = ...,
        intValue: builtins.int = ...,
        uuidValue: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "intValue",
            b"intValue",
            "stringValue",
            b"stringValue",
            "uuidValue",
            b"uuidValue",
        ],
    ) -> None: ...

global___MetadataValue = MetadataValue

@typing_extensions.final
class Schema(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    FIELDS_FIELD_NUMBER: builtins.int
    EMBEDDINGDIMENSION_FIELD_NUMBER: builtins.int
    DESIREDCLUSTERCOUNT_FIELD_NUMBER: builtins.int
    DESIREDCLUSTERSIZE_FIELD_NUMBER: builtins.int
    CHUNKSIZE_FIELD_NUMBER: builtins.int
    INMEMORYRECORDS_FIELD_NUMBER: builtins.int
    id: builtins.int
    """Auto-assigned at insertion time"""
    name: builtins.str
    @property
    def fields(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___MetadataField
    ]: ...
    embeddingDimension: builtins.int
    desiredClusterCount: builtins.int
    """Customization parameters for how this schema should be indexed
    Minimum amount of clusters
    """
    desiredClusterSize: builtins.int
    """Desired amount of records per cluster"""
    chunkSize: builtins.int
    """Amount of records per-file that's stored on disk"""
    inMemoryRecords: builtins.int
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        name: builtins.str = ...,
        fields: collections.abc.Iterable[global___MetadataField] | None = ...,
        embeddingDimension: builtins.int = ...,
        desiredClusterCount: builtins.int = ...,
        desiredClusterSize: builtins.int = ...,
        chunkSize: builtins.int = ...,
        inMemoryRecords: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "chunkSize",
            b"chunkSize",
            "desiredClusterCount",
            b"desiredClusterCount",
            "desiredClusterSize",
            b"desiredClusterSize",
            "embeddingDimension",
            b"embeddingDimension",
            "fields",
            b"fields",
            "id",
            b"id",
            "inMemoryRecords",
            b"inMemoryRecords",
            "name",
            b"name",
        ],
    ) -> None: ...

global___Schema = Schema

@typing_extensions.final
class MetadataField(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    ISMANIFOLD_FIELD_NUMBER: builtins.int
    name: builtins.str
    type: global___FieldType.ValueType
    isManifold: builtins.bool
    """A manifold is a hard separation of your dataset. It is used in situations where clusters
    can be absolutely separated by some criteria (like user ids, company ids, etc).
    If this is specified, it requires that the field is specified in each search that is performed.
    """
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        type: global___FieldType.ValueType = ...,
        isManifold: builtins.bool = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "isManifold", b"isManifold", "name", b"name", "type", b"type"
        ],
    ) -> None: ...

global___MetadataField = MetadataField
