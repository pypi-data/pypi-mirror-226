# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _IsotropicWaveletsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkShrinkDecimateImageFilterPython
else:
    import _itkShrinkDecimateImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkShrinkDecimateImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkShrinkDecimateImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkShrinkDecimateImageFilterID2ID2_New():
    return itkShrinkDecimateImageFilterID2ID2.New()

class itkShrinkDecimateImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkShrinkDecimateImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterID2ID2
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterID2ID2

        Create a new object of the class itkShrinkDecimateImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterID2ID2 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_swigregister(itkShrinkDecimateImageFilterID2ID2)
itkShrinkDecimateImageFilterID2ID2___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2___New_orig__
itkShrinkDecimateImageFilterID2ID2_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID2ID2_cast


def itkShrinkDecimateImageFilterID3ID3_New():
    return itkShrinkDecimateImageFilterID3ID3.New()

class itkShrinkDecimateImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkShrinkDecimateImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterID3ID3
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterID3ID3

        Create a new object of the class itkShrinkDecimateImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterID3ID3 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_swigregister(itkShrinkDecimateImageFilterID3ID3)
itkShrinkDecimateImageFilterID3ID3___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3___New_orig__
itkShrinkDecimateImageFilterID3ID3_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID3ID3_cast


def itkShrinkDecimateImageFilterID4ID4_New():
    return itkShrinkDecimateImageFilterID4ID4.New()

class itkShrinkDecimateImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkShrinkDecimateImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterID4ID4
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterID4ID4

        Create a new object of the class itkShrinkDecimateImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterID4ID4 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_swigregister(itkShrinkDecimateImageFilterID4ID4)
itkShrinkDecimateImageFilterID4ID4___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4___New_orig__
itkShrinkDecimateImageFilterID4ID4_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterID4ID4_cast


def itkShrinkDecimateImageFilterIF2IF2_New():
    return itkShrinkDecimateImageFilterIF2IF2.New()

class itkShrinkDecimateImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkShrinkDecimateImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterIF2IF2
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterIF2IF2

        Create a new object of the class itkShrinkDecimateImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterIF2IF2 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_swigregister(itkShrinkDecimateImageFilterIF2IF2)
itkShrinkDecimateImageFilterIF2IF2___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2___New_orig__
itkShrinkDecimateImageFilterIF2IF2_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF2IF2_cast


def itkShrinkDecimateImageFilterIF3IF3_New():
    return itkShrinkDecimateImageFilterIF3IF3.New()

class itkShrinkDecimateImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkShrinkDecimateImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterIF3IF3
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterIF3IF3

        Create a new object of the class itkShrinkDecimateImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterIF3IF3 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_swigregister(itkShrinkDecimateImageFilterIF3IF3)
itkShrinkDecimateImageFilterIF3IF3___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3___New_orig__
itkShrinkDecimateImageFilterIF3IF3_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF3IF3_cast


def itkShrinkDecimateImageFilterIF4IF4_New():
    return itkShrinkDecimateImageFilterIF4IF4.New()

class itkShrinkDecimateImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkShrinkDecimateImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterIF4IF4
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterIF4IF4

        Create a new object of the class itkShrinkDecimateImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterIF4IF4 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_swigregister(itkShrinkDecimateImageFilterIF4IF4)
itkShrinkDecimateImageFilterIF4IF4___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4___New_orig__
itkShrinkDecimateImageFilterIF4IF4_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIF4IF4_cast


def itkShrinkDecimateImageFilterISS2ISS2_New():
    return itkShrinkDecimateImageFilterISS2ISS2.New()

class itkShrinkDecimateImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkShrinkDecimateImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterISS2ISS2

        Create a new object of the class itkShrinkDecimateImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterISS2ISS2 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_swigregister(itkShrinkDecimateImageFilterISS2ISS2)
itkShrinkDecimateImageFilterISS2ISS2___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2___New_orig__
itkShrinkDecimateImageFilterISS2ISS2_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS2ISS2_cast


def itkShrinkDecimateImageFilterISS3ISS3_New():
    return itkShrinkDecimateImageFilterISS3ISS3.New()

class itkShrinkDecimateImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkShrinkDecimateImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterISS3ISS3

        Create a new object of the class itkShrinkDecimateImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterISS3ISS3 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_swigregister(itkShrinkDecimateImageFilterISS3ISS3)
itkShrinkDecimateImageFilterISS3ISS3___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3___New_orig__
itkShrinkDecimateImageFilterISS3ISS3_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS3ISS3_cast


def itkShrinkDecimateImageFilterISS4ISS4_New():
    return itkShrinkDecimateImageFilterISS4ISS4.New()

class itkShrinkDecimateImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkShrinkDecimateImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterISS4ISS4

        Create a new object of the class itkShrinkDecimateImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterISS4ISS4 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_swigregister(itkShrinkDecimateImageFilterISS4ISS4)
itkShrinkDecimateImageFilterISS4ISS4___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4___New_orig__
itkShrinkDecimateImageFilterISS4ISS4_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterISS4ISS4_cast


def itkShrinkDecimateImageFilterIUC2IUC2_New():
    return itkShrinkDecimateImageFilterIUC2IUC2.New()

class itkShrinkDecimateImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkShrinkDecimateImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterIUC2IUC2

        Create a new object of the class itkShrinkDecimateImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterIUC2IUC2 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_swigregister(itkShrinkDecimateImageFilterIUC2IUC2)
itkShrinkDecimateImageFilterIUC2IUC2___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2___New_orig__
itkShrinkDecimateImageFilterIUC2IUC2_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC2IUC2_cast


def itkShrinkDecimateImageFilterIUC3IUC3_New():
    return itkShrinkDecimateImageFilterIUC3IUC3.New()

class itkShrinkDecimateImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkShrinkDecimateImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterIUC3IUC3

        Create a new object of the class itkShrinkDecimateImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterIUC3IUC3 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_swigregister(itkShrinkDecimateImageFilterIUC3IUC3)
itkShrinkDecimateImageFilterIUC3IUC3___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3___New_orig__
itkShrinkDecimateImageFilterIUC3IUC3_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC3IUC3_cast


def itkShrinkDecimateImageFilterIUC4IUC4_New():
    return itkShrinkDecimateImageFilterIUC4IUC4.New()

class itkShrinkDecimateImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkShrinkDecimateImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterIUC4IUC4

        Create a new object of the class itkShrinkDecimateImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterIUC4IUC4 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_swigregister(itkShrinkDecimateImageFilterIUC4IUC4)
itkShrinkDecimateImageFilterIUC4IUC4___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4___New_orig__
itkShrinkDecimateImageFilterIUC4IUC4_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUC4IUC4_cast


def itkShrinkDecimateImageFilterIUS2IUS2_New():
    return itkShrinkDecimateImageFilterIUS2IUS2.New()

class itkShrinkDecimateImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkShrinkDecimateImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterIUS2IUS2

        Create a new object of the class itkShrinkDecimateImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterIUS2IUS2 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_swigregister(itkShrinkDecimateImageFilterIUS2IUS2)
itkShrinkDecimateImageFilterIUS2IUS2___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2___New_orig__
itkShrinkDecimateImageFilterIUS2IUS2_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS2IUS2_cast


def itkShrinkDecimateImageFilterIUS3IUS3_New():
    return itkShrinkDecimateImageFilterIUS3IUS3.New()

class itkShrinkDecimateImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkShrinkDecimateImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterIUS3IUS3

        Create a new object of the class itkShrinkDecimateImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterIUS3IUS3 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_swigregister(itkShrinkDecimateImageFilterIUS3IUS3)
itkShrinkDecimateImageFilterIUS3IUS3___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3___New_orig__
itkShrinkDecimateImageFilterIUS3IUS3_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS3IUS3_cast


def itkShrinkDecimateImageFilterIUS4IUS4_New():
    return itkShrinkDecimateImageFilterIUS4IUS4.New()

class itkShrinkDecimateImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkShrinkDecimateImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_Clone)
    SetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_SetShrinkFactors)
    SetShrinkFactor = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_SetShrinkFactor)
    GetShrinkFactors = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_GetShrinkFactors)
    GenerateOutputInformation = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_GenerateOutputInformation)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_GenerateInputRequestedRegion)
    InputConvertibleToOutputCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkDecimateImageFilterPython.delete_itkShrinkDecimateImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkShrinkDecimateImageFilterIUS4IUS4

        Create a new object of the class itkShrinkDecimateImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkDecimateImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkDecimateImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkDecimateImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkDecimateImageFilterIUS4IUS4 in _itkShrinkDecimateImageFilterPython:
_itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_swigregister(itkShrinkDecimateImageFilterIUS4IUS4)
itkShrinkDecimateImageFilterIUS4IUS4___New_orig__ = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4___New_orig__
itkShrinkDecimateImageFilterIUS4IUS4_cast = _itkShrinkDecimateImageFilterPython.itkShrinkDecimateImageFilterIUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def shrink_decimate_image_filter(*args: itkt.ImageLike,  shrink_factors: Union[int, Sequence[int]]=..., shrink_factor: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ShrinkDecimateImageFilter"""
    import itk

    kwarg_typehints = { 'shrink_factors':shrink_factors,'shrink_factor':shrink_factor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ShrinkDecimateImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def shrink_decimate_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.IsotropicWavelets.ShrinkDecimateImageFilter
    shrink_decimate_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    shrink_decimate_image_filter.__doc__ = filter_object.__doc__




