# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _IsotropicWaveletsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkWaveletFrequencyForwardPython
else:
    import _itkWaveletFrequencyForwardPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkWaveletFrequencyForwardPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkWaveletFrequencyForwardPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkShannonIsotropicWaveletPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkIsotropicWaveletFrequencyFunctionPython
import itk.itkIsotropicFrequencyFunctionPython
import itk.itkFrequencyFunctionPython
import itk.itkWaveletFrequencyFilterBankGeneratorPython
import itk.itkVowIsotropicWaveletPython
import itk.itkHeldIsotropicWaveletPython
import itk.itkGenerateImageSourcePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkSimoncelliIsotropicWaveletPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython

def itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_New():
    return itkWaveletFrequencyForwardICD2ICD2HeldD2VD2.New()

class itkWaveletFrequencyForwardICD2ICD2HeldD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD2ICD2HeldD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD2ICD2HeldD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD2ICD2HeldD2VD2

        Create a new object of the class itkWaveletFrequencyForwardICD2ICD2HeldD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD2ICD2HeldD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD2ICD2HeldD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD2ICD2HeldD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD2ICD2HeldD2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_swigregister(itkWaveletFrequencyForwardICD2ICD2HeldD2VD2)
itkWaveletFrequencyForwardICD2ICD2HeldD2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2___New_orig__
itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldD2VD2_cast


def itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_New():
    return itkWaveletFrequencyForwardICD2ICD2HeldF2VD2.New()

class itkWaveletFrequencyForwardICD2ICD2HeldF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD2ICD2HeldF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD2ICD2HeldF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD2ICD2HeldF2VD2

        Create a new object of the class itkWaveletFrequencyForwardICD2ICD2HeldF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD2ICD2HeldF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD2ICD2HeldF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD2ICD2HeldF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD2ICD2HeldF2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_swigregister(itkWaveletFrequencyForwardICD2ICD2HeldF2VD2)
itkWaveletFrequencyForwardICD2ICD2HeldF2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2___New_orig__
itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2HeldF2VD2_cast


def itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_New():
    return itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2.New()

class itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2

        Create a new object of the class itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_swigregister(itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2)
itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2___New_orig__
itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonD2VD2_cast


def itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_New():
    return itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2.New()

class itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2

        Create a new object of the class itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_swigregister(itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2)
itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2___New_orig__
itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2ShannonF2VD2_cast


def itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_New():
    return itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2.New()

class itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2

        Create a new object of the class itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_swigregister(itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2)
itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2___New_orig__
itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliD2VD2_cast


def itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_New():
    return itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2.New()

class itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2

        Create a new object of the class itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_swigregister(itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2)
itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2___New_orig__
itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2SimoncelliF2VD2_cast


def itkWaveletFrequencyForwardICD2ICD2VowD2VD2_New():
    return itkWaveletFrequencyForwardICD2ICD2VowD2VD2.New()

class itkWaveletFrequencyForwardICD2ICD2VowD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD2ICD2VowD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD2ICD2VowD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD2ICD2VowD2VD2

        Create a new object of the class itkWaveletFrequencyForwardICD2ICD2VowD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD2ICD2VowD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD2ICD2VowD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD2ICD2VowD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD2ICD2VowD2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_swigregister(itkWaveletFrequencyForwardICD2ICD2VowD2VD2)
itkWaveletFrequencyForwardICD2ICD2VowD2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2___New_orig__
itkWaveletFrequencyForwardICD2ICD2VowD2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD2ICD2VowD2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowD2VD2_cast


def itkWaveletFrequencyForwardICD2ICD2VowF2VD2_New():
    return itkWaveletFrequencyForwardICD2ICD2VowF2VD2.New()

class itkWaveletFrequencyForwardICD2ICD2VowF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD2ICD2VowF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD2ICD2VowF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD2ICD2VowF2VD2

        Create a new object of the class itkWaveletFrequencyForwardICD2ICD2VowF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD2ICD2VowF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD2ICD2VowF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD2ICD2VowF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD2ICD2VowF2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_swigregister(itkWaveletFrequencyForwardICD2ICD2VowF2VD2)
itkWaveletFrequencyForwardICD2ICD2VowF2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2___New_orig__
itkWaveletFrequencyForwardICD2ICD2VowF2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD2ICD2VowF2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD2ICD2VowF2VD2_cast


def itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_New():
    return itkWaveletFrequencyForwardICD3ICD3HeldD3VD3.New()

class itkWaveletFrequencyForwardICD3ICD3HeldD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD3ICD3HeldD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD3ICD3HeldD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD3ICD3HeldD3VD3

        Create a new object of the class itkWaveletFrequencyForwardICD3ICD3HeldD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD3ICD3HeldD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD3ICD3HeldD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD3ICD3HeldD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD3ICD3HeldD3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_swigregister(itkWaveletFrequencyForwardICD3ICD3HeldD3VD3)
itkWaveletFrequencyForwardICD3ICD3HeldD3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3___New_orig__
itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldD3VD3_cast


def itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_New():
    return itkWaveletFrequencyForwardICD3ICD3HeldF3VD3.New()

class itkWaveletFrequencyForwardICD3ICD3HeldF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD3ICD3HeldF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD3ICD3HeldF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD3ICD3HeldF3VD3

        Create a new object of the class itkWaveletFrequencyForwardICD3ICD3HeldF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD3ICD3HeldF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD3ICD3HeldF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD3ICD3HeldF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD3ICD3HeldF3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_swigregister(itkWaveletFrequencyForwardICD3ICD3HeldF3VD3)
itkWaveletFrequencyForwardICD3ICD3HeldF3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3___New_orig__
itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3HeldF3VD3_cast


def itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_New():
    return itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3.New()

class itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3

        Create a new object of the class itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_swigregister(itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3)
itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3___New_orig__
itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonD3VD3_cast


def itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_New():
    return itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3.New()

class itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3

        Create a new object of the class itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_swigregister(itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3)
itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3___New_orig__
itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3ShannonF3VD3_cast


def itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_New():
    return itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3.New()

class itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3

        Create a new object of the class itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_swigregister(itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3)
itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3___New_orig__
itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliD3VD3_cast


def itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_New():
    return itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3.New()

class itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3

        Create a new object of the class itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_swigregister(itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3)
itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3___New_orig__
itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3SimoncelliF3VD3_cast


def itkWaveletFrequencyForwardICD3ICD3VowD3VD3_New():
    return itkWaveletFrequencyForwardICD3ICD3VowD3VD3.New()

class itkWaveletFrequencyForwardICD3ICD3VowD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD3ICD3VowD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD3ICD3VowD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD3ICD3VowD3VD3

        Create a new object of the class itkWaveletFrequencyForwardICD3ICD3VowD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD3ICD3VowD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD3ICD3VowD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD3ICD3VowD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD3ICD3VowD3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_swigregister(itkWaveletFrequencyForwardICD3ICD3VowD3VD3)
itkWaveletFrequencyForwardICD3ICD3VowD3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3___New_orig__
itkWaveletFrequencyForwardICD3ICD3VowD3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD3ICD3VowD3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowD3VD3_cast


def itkWaveletFrequencyForwardICD3ICD3VowF3VD3_New():
    return itkWaveletFrequencyForwardICD3ICD3VowF3VD3.New()

class itkWaveletFrequencyForwardICD3ICD3VowF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD3ICD3VowF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD3ICD3VowF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD3ICD3VowF3VD3

        Create a new object of the class itkWaveletFrequencyForwardICD3ICD3VowF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD3ICD3VowF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD3ICD3VowF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD3ICD3VowF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD3ICD3VowF3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_swigregister(itkWaveletFrequencyForwardICD3ICD3VowF3VD3)
itkWaveletFrequencyForwardICD3ICD3VowF3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3___New_orig__
itkWaveletFrequencyForwardICD3ICD3VowF3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD3ICD3VowF3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD3ICD3VowF3VD3_cast


def itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_New():
    return itkWaveletFrequencyForwardICD4ICD4HeldD4VD4.New()

class itkWaveletFrequencyForwardICD4ICD4HeldD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD4ICD4HeldD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD4ICD4HeldD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD4ICD4HeldD4VD4

        Create a new object of the class itkWaveletFrequencyForwardICD4ICD4HeldD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD4ICD4HeldD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD4ICD4HeldD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD4ICD4HeldD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD4ICD4HeldD4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_swigregister(itkWaveletFrequencyForwardICD4ICD4HeldD4VD4)
itkWaveletFrequencyForwardICD4ICD4HeldD4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4___New_orig__
itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldD4VD4_cast


def itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_New():
    return itkWaveletFrequencyForwardICD4ICD4HeldF4VD4.New()

class itkWaveletFrequencyForwardICD4ICD4HeldF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD4ICD4HeldF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD4ICD4HeldF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD4ICD4HeldF4VD4

        Create a new object of the class itkWaveletFrequencyForwardICD4ICD4HeldF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD4ICD4HeldF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD4ICD4HeldF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD4ICD4HeldF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD4ICD4HeldF4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_swigregister(itkWaveletFrequencyForwardICD4ICD4HeldF4VD4)
itkWaveletFrequencyForwardICD4ICD4HeldF4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4___New_orig__
itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4HeldF4VD4_cast


def itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_New():
    return itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4.New()

class itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4

        Create a new object of the class itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_swigregister(itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4)
itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4___New_orig__
itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonD4VD4_cast


def itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_New():
    return itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4.New()

class itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4

        Create a new object of the class itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_swigregister(itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4)
itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4___New_orig__
itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4ShannonF4VD4_cast


def itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_New():
    return itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4.New()

class itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4

        Create a new object of the class itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_swigregister(itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4)
itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4___New_orig__
itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliD4VD4_cast


def itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_New():
    return itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4.New()

class itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4

        Create a new object of the class itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_swigregister(itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4)
itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4___New_orig__
itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4SimoncelliF4VD4_cast


def itkWaveletFrequencyForwardICD4ICD4VowD4VD4_New():
    return itkWaveletFrequencyForwardICD4ICD4VowD4VD4.New()

class itkWaveletFrequencyForwardICD4ICD4VowD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD4ICD4VowD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD4ICD4VowD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD4ICD4VowD4VD4

        Create a new object of the class itkWaveletFrequencyForwardICD4ICD4VowD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD4ICD4VowD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD4ICD4VowD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD4ICD4VowD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD4ICD4VowD4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_swigregister(itkWaveletFrequencyForwardICD4ICD4VowD4VD4)
itkWaveletFrequencyForwardICD4ICD4VowD4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4___New_orig__
itkWaveletFrequencyForwardICD4ICD4VowD4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD4ICD4VowD4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowD4VD4_cast


def itkWaveletFrequencyForwardICD4ICD4VowF4VD4_New():
    return itkWaveletFrequencyForwardICD4ICD4VowF4VD4.New()

class itkWaveletFrequencyForwardICD4ICD4VowF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICD4ICD4VowF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICD4ICD4VowF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICD4ICD4VowF4VD4

        Create a new object of the class itkWaveletFrequencyForwardICD4ICD4VowF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICD4ICD4VowF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICD4ICD4VowF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICD4ICD4VowF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICD4ICD4VowF4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_swigregister(itkWaveletFrequencyForwardICD4ICD4VowF4VD4)
itkWaveletFrequencyForwardICD4ICD4VowF4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4___New_orig__
itkWaveletFrequencyForwardICD4ICD4VowF4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICD4ICD4VowF4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICD4ICD4VowF4VD4_cast


def itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_New():
    return itkWaveletFrequencyForwardICF2ICF2HeldD2VD2.New()

class itkWaveletFrequencyForwardICF2ICF2HeldD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF2ICF2HeldD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF2ICF2HeldD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF2ICF2HeldD2VD2

        Create a new object of the class itkWaveletFrequencyForwardICF2ICF2HeldD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF2ICF2HeldD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF2ICF2HeldD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF2ICF2HeldD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF2ICF2HeldD2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_swigregister(itkWaveletFrequencyForwardICF2ICF2HeldD2VD2)
itkWaveletFrequencyForwardICF2ICF2HeldD2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2___New_orig__
itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldD2VD2_cast


def itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_New():
    return itkWaveletFrequencyForwardICF2ICF2HeldF2VD2.New()

class itkWaveletFrequencyForwardICF2ICF2HeldF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF2ICF2HeldF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF2ICF2HeldF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF2ICF2HeldF2VD2

        Create a new object of the class itkWaveletFrequencyForwardICF2ICF2HeldF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF2ICF2HeldF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF2ICF2HeldF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF2ICF2HeldF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF2ICF2HeldF2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_swigregister(itkWaveletFrequencyForwardICF2ICF2HeldF2VD2)
itkWaveletFrequencyForwardICF2ICF2HeldF2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2___New_orig__
itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2HeldF2VD2_cast


def itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_New():
    return itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2.New()

class itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2

        Create a new object of the class itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_swigregister(itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2)
itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2___New_orig__
itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonD2VD2_cast


def itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_New():
    return itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2.New()

class itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2

        Create a new object of the class itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_swigregister(itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2)
itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2___New_orig__
itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2ShannonF2VD2_cast


def itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_New():
    return itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2.New()

class itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2

        Create a new object of the class itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_swigregister(itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2)
itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2___New_orig__
itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliD2VD2_cast


def itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_New():
    return itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2.New()

class itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2

        Create a new object of the class itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_swigregister(itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2)
itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2___New_orig__
itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2SimoncelliF2VD2_cast


def itkWaveletFrequencyForwardICF2ICF2VowD2VD2_New():
    return itkWaveletFrequencyForwardICF2ICF2VowD2VD2.New()

class itkWaveletFrequencyForwardICF2ICF2VowD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF2ICF2VowD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF2ICF2VowD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF2ICF2VowD2VD2

        Create a new object of the class itkWaveletFrequencyForwardICF2ICF2VowD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF2ICF2VowD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF2ICF2VowD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF2ICF2VowD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF2ICF2VowD2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_swigregister(itkWaveletFrequencyForwardICF2ICF2VowD2VD2)
itkWaveletFrequencyForwardICF2ICF2VowD2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2___New_orig__
itkWaveletFrequencyForwardICF2ICF2VowD2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF2ICF2VowD2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowD2VD2_cast


def itkWaveletFrequencyForwardICF2ICF2VowF2VD2_New():
    return itkWaveletFrequencyForwardICF2ICF2VowF2VD2.New()

class itkWaveletFrequencyForwardICF2ICF2VowF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF2ICF2VowF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF2ICF2VowF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF2ICF2VowF2VD2

        Create a new object of the class itkWaveletFrequencyForwardICF2ICF2VowF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF2ICF2VowF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF2ICF2VowF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF2ICF2VowF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF2ICF2VowF2VD2 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_swigregister(itkWaveletFrequencyForwardICF2ICF2VowF2VD2)
itkWaveletFrequencyForwardICF2ICF2VowF2VD2___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2___New_orig__
itkWaveletFrequencyForwardICF2ICF2VowF2VD2_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF2ICF2VowF2VD2_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF2ICF2VowF2VD2_cast


def itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_New():
    return itkWaveletFrequencyForwardICF3ICF3HeldD3VD3.New()

class itkWaveletFrequencyForwardICF3ICF3HeldD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF3ICF3HeldD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF3ICF3HeldD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF3ICF3HeldD3VD3

        Create a new object of the class itkWaveletFrequencyForwardICF3ICF3HeldD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF3ICF3HeldD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF3ICF3HeldD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF3ICF3HeldD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF3ICF3HeldD3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_swigregister(itkWaveletFrequencyForwardICF3ICF3HeldD3VD3)
itkWaveletFrequencyForwardICF3ICF3HeldD3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3___New_orig__
itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldD3VD3_cast


def itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_New():
    return itkWaveletFrequencyForwardICF3ICF3HeldF3VD3.New()

class itkWaveletFrequencyForwardICF3ICF3HeldF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF3ICF3HeldF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF3ICF3HeldF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF3ICF3HeldF3VD3

        Create a new object of the class itkWaveletFrequencyForwardICF3ICF3HeldF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF3ICF3HeldF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF3ICF3HeldF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF3ICF3HeldF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF3ICF3HeldF3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_swigregister(itkWaveletFrequencyForwardICF3ICF3HeldF3VD3)
itkWaveletFrequencyForwardICF3ICF3HeldF3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3___New_orig__
itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3HeldF3VD3_cast


def itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_New():
    return itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3.New()

class itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3

        Create a new object of the class itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_swigregister(itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3)
itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3___New_orig__
itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonD3VD3_cast


def itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_New():
    return itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3.New()

class itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3

        Create a new object of the class itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_swigregister(itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3)
itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3___New_orig__
itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3ShannonF3VD3_cast


def itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_New():
    return itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3.New()

class itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3

        Create a new object of the class itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_swigregister(itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3)
itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3___New_orig__
itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliD3VD3_cast


def itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_New():
    return itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3.New()

class itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3

        Create a new object of the class itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_swigregister(itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3)
itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3___New_orig__
itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3SimoncelliF3VD3_cast


def itkWaveletFrequencyForwardICF3ICF3VowD3VD3_New():
    return itkWaveletFrequencyForwardICF3ICF3VowD3VD3.New()

class itkWaveletFrequencyForwardICF3ICF3VowD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF3ICF3VowD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF3ICF3VowD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF3ICF3VowD3VD3

        Create a new object of the class itkWaveletFrequencyForwardICF3ICF3VowD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF3ICF3VowD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF3ICF3VowD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF3ICF3VowD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF3ICF3VowD3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_swigregister(itkWaveletFrequencyForwardICF3ICF3VowD3VD3)
itkWaveletFrequencyForwardICF3ICF3VowD3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3___New_orig__
itkWaveletFrequencyForwardICF3ICF3VowD3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF3ICF3VowD3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowD3VD3_cast


def itkWaveletFrequencyForwardICF3ICF3VowF3VD3_New():
    return itkWaveletFrequencyForwardICF3ICF3VowF3VD3.New()

class itkWaveletFrequencyForwardICF3ICF3VowF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF3ICF3VowF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF3ICF3VowF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF3ICF3VowF3VD3

        Create a new object of the class itkWaveletFrequencyForwardICF3ICF3VowF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF3ICF3VowF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF3ICF3VowF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF3ICF3VowF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF3ICF3VowF3VD3 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_swigregister(itkWaveletFrequencyForwardICF3ICF3VowF3VD3)
itkWaveletFrequencyForwardICF3ICF3VowF3VD3___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3___New_orig__
itkWaveletFrequencyForwardICF3ICF3VowF3VD3_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF3ICF3VowF3VD3_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF3ICF3VowF3VD3_cast


def itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_New():
    return itkWaveletFrequencyForwardICF4ICF4HeldD4VD4.New()

class itkWaveletFrequencyForwardICF4ICF4HeldD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF4ICF4HeldD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF4ICF4HeldD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF4ICF4HeldD4VD4

        Create a new object of the class itkWaveletFrequencyForwardICF4ICF4HeldD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF4ICF4HeldD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF4ICF4HeldD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF4ICF4HeldD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF4ICF4HeldD4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_swigregister(itkWaveletFrequencyForwardICF4ICF4HeldD4VD4)
itkWaveletFrequencyForwardICF4ICF4HeldD4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4___New_orig__
itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldD4VD4_cast


def itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_New():
    return itkWaveletFrequencyForwardICF4ICF4HeldF4VD4.New()

class itkWaveletFrequencyForwardICF4ICF4HeldF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF4ICF4HeldF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF4ICF4HeldF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF4ICF4HeldF4VD4

        Create a new object of the class itkWaveletFrequencyForwardICF4ICF4HeldF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF4ICF4HeldF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF4ICF4HeldF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF4ICF4HeldF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF4ICF4HeldF4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_swigregister(itkWaveletFrequencyForwardICF4ICF4HeldF4VD4)
itkWaveletFrequencyForwardICF4ICF4HeldF4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4___New_orig__
itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4HeldF4VD4_cast


def itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_New():
    return itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4.New()

class itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4

        Create a new object of the class itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_swigregister(itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4)
itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4___New_orig__
itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonD4VD4_cast


def itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_New():
    return itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4.New()

class itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4

        Create a new object of the class itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_swigregister(itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4)
itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4___New_orig__
itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4ShannonF4VD4_cast


def itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_New():
    return itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4.New()

class itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4

        Create a new object of the class itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_swigregister(itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4)
itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4___New_orig__
itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliD4VD4_cast


def itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_New():
    return itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4.New()

class itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4

        Create a new object of the class itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_swigregister(itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4)
itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4___New_orig__
itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4SimoncelliF4VD4_cast


def itkWaveletFrequencyForwardICF4ICF4VowD4VD4_New():
    return itkWaveletFrequencyForwardICF4ICF4VowD4VD4.New()

class itkWaveletFrequencyForwardICF4ICF4VowD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF4ICF4VowD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF4ICF4VowD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF4ICF4VowD4VD4

        Create a new object of the class itkWaveletFrequencyForwardICF4ICF4VowD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF4ICF4VowD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF4ICF4VowD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF4ICF4VowD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF4ICF4VowD4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_swigregister(itkWaveletFrequencyForwardICF4ICF4VowD4VD4)
itkWaveletFrequencyForwardICF4ICF4VowD4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4___New_orig__
itkWaveletFrequencyForwardICF4ICF4VowD4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF4ICF4VowD4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowD4VD4_cast


def itkWaveletFrequencyForwardICF4ICF4VowF4VD4_New():
    return itkWaveletFrequencyForwardICF4ICF4VowF4VD4.New()

class itkWaveletFrequencyForwardICF4ICF4VowF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyForwardICF4ICF4VowF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetHighPassSubBands)
    GetTotalOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetTotalOutputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetScaleFactor)
    GetModifiableWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetModifiableWaveletFilterBank)
    GetWaveletFilterBank = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetWaveletFilterBank)
    GetModifiableWaveletFunction = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetModifiableWaveletFunction)
    SetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_SetStoreWaveletFilterBankPyramid)
    GetStoreWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetStoreWaveletFilterBankPyramid)
    StoreWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_StoreWaveletFilterBankPyramidOn)
    StoreWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_StoreWaveletFilterBankPyramidOff)
    GetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetWaveletFilterBankPyramid)
    ComputeMaxNumberOfLevels = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_ComputeMaxNumberOfLevels)
    OutputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_OutputIndexToLevelBand)
    GetOutputs = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetOutputs)
    GetOutputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetOutputsHighPass)
    GetOutputLowPass = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetOutputLowPass)
    GetOutputsHighPassByLevel = _swig_new_instance_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_GetOutputsHighPassByLevel)
    __swig_destroy__ = _itkWaveletFrequencyForwardPython.delete_itkWaveletFrequencyForwardICF4ICF4VowF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyForwardICF4ICF4VowF4VD4

        Create a new object of the class itkWaveletFrequencyForwardICF4ICF4VowF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyForwardICF4ICF4VowF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyForwardICF4ICF4VowF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyForwardICF4ICF4VowF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyForwardICF4ICF4VowF4VD4 in _itkWaveletFrequencyForwardPython:
_itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_swigregister(itkWaveletFrequencyForwardICF4ICF4VowF4VD4)
itkWaveletFrequencyForwardICF4ICF4VowF4VD4___New_orig__ = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4___New_orig__
itkWaveletFrequencyForwardICF4ICF4VowF4VD4_ComputeMaxNumberOfLevels = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_ComputeMaxNumberOfLevels
itkWaveletFrequencyForwardICF4ICF4VowF4VD4_cast = _itkWaveletFrequencyForwardPython.itkWaveletFrequencyForwardICF4ICF4VowF4VD4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def wavelet_frequency_forward(*args: itkt.ImageLike,  levels: int=..., high_pass_sub_bands: int=..., store_wavelet_filter_bank_pyramid: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for WaveletFrequencyForward"""
    import itk

    kwarg_typehints = { 'levels':levels,'high_pass_sub_bands':high_pass_sub_bands,'store_wavelet_filter_bank_pyramid':store_wavelet_filter_bank_pyramid }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.WaveletFrequencyForward.New(*args, **kwargs)
    return instance.__internal_call__()

def wavelet_frequency_forward_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.IsotropicWavelets.WaveletFrequencyForward
    wavelet_frequency_forward.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    wavelet_frequency_forward.__doc__ = filter_object.__doc__




