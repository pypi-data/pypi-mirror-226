# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _IsotropicWaveletsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkZeroDCImageFilterPython
else:
    import _itkZeroDCImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkZeroDCImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkZeroDCImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterCommonPython

def itkZeroDCImageFilterID2_New():
    return itkZeroDCImageFilterID2.New()

class itkZeroDCImageFilterID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkZeroDCImageFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID2_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterID2_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID2_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterID2
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterID2

        Create a new object of the class itkZeroDCImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterID2 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterID2_swigregister(itkZeroDCImageFilterID2)
itkZeroDCImageFilterID2___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterID2___New_orig__
itkZeroDCImageFilterID2_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterID2_cast


def itkZeroDCImageFilterID3_New():
    return itkZeroDCImageFilterID3.New()

class itkZeroDCImageFilterID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkZeroDCImageFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID3_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterID3_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID3_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterID3
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterID3

        Create a new object of the class itkZeroDCImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterID3 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterID3_swigregister(itkZeroDCImageFilterID3)
itkZeroDCImageFilterID3___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterID3___New_orig__
itkZeroDCImageFilterID3_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterID3_cast


def itkZeroDCImageFilterID4_New():
    return itkZeroDCImageFilterID4.New()

class itkZeroDCImageFilterID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkZeroDCImageFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID4___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID4_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterID4_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID4_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterID4
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterID4_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterID4

        Create a new object of the class itkZeroDCImageFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterID4 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterID4_swigregister(itkZeroDCImageFilterID4)
itkZeroDCImageFilterID4___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterID4___New_orig__
itkZeroDCImageFilterID4_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterID4_cast


def itkZeroDCImageFilterIF2_New():
    return itkZeroDCImageFilterIF2.New()

class itkZeroDCImageFilterIF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkZeroDCImageFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF2_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIF2_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF2_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterIF2
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterIF2

        Create a new object of the class itkZeroDCImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterIF2 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF2_swigregister(itkZeroDCImageFilterIF2)
itkZeroDCImageFilterIF2___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIF2___New_orig__
itkZeroDCImageFilterIF2_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIF2_cast


def itkZeroDCImageFilterIF3_New():
    return itkZeroDCImageFilterIF3.New()

class itkZeroDCImageFilterIF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkZeroDCImageFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF3_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIF3_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF3_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterIF3
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterIF3

        Create a new object of the class itkZeroDCImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterIF3 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF3_swigregister(itkZeroDCImageFilterIF3)
itkZeroDCImageFilterIF3___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIF3___New_orig__
itkZeroDCImageFilterIF3_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIF3_cast


def itkZeroDCImageFilterIF4_New():
    return itkZeroDCImageFilterIF4.New()

class itkZeroDCImageFilterIF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkZeroDCImageFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF4_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIF4_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF4_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterIF4
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF4_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterIF4

        Create a new object of the class itkZeroDCImageFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterIF4 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterIF4_swigregister(itkZeroDCImageFilterIF4)
itkZeroDCImageFilterIF4___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIF4___New_orig__
itkZeroDCImageFilterIF4_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIF4_cast


def itkZeroDCImageFilterISS2_New():
    return itkZeroDCImageFilterISS2.New()

class itkZeroDCImageFilterISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkZeroDCImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS2_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterISS2_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS2_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterISS2
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterISS2

        Create a new object of the class itkZeroDCImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterISS2 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS2_swigregister(itkZeroDCImageFilterISS2)
itkZeroDCImageFilterISS2___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterISS2___New_orig__
itkZeroDCImageFilterISS2_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterISS2_cast


def itkZeroDCImageFilterISS3_New():
    return itkZeroDCImageFilterISS3.New()

class itkZeroDCImageFilterISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkZeroDCImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS3_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterISS3_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS3_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterISS3
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterISS3

        Create a new object of the class itkZeroDCImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterISS3 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS3_swigregister(itkZeroDCImageFilterISS3)
itkZeroDCImageFilterISS3___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterISS3___New_orig__
itkZeroDCImageFilterISS3_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterISS3_cast


def itkZeroDCImageFilterISS4_New():
    return itkZeroDCImageFilterISS4.New()

class itkZeroDCImageFilterISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkZeroDCImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS4_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterISS4_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS4_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterISS4
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS4_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterISS4

        Create a new object of the class itkZeroDCImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterISS4 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterISS4_swigregister(itkZeroDCImageFilterISS4)
itkZeroDCImageFilterISS4___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterISS4___New_orig__
itkZeroDCImageFilterISS4_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterISS4_cast


def itkZeroDCImageFilterIUC2_New():
    return itkZeroDCImageFilterIUC2.New()

class itkZeroDCImageFilterIUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkZeroDCImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC2_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC2_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC2_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterIUC2
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterIUC2

        Create a new object of the class itkZeroDCImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterIUC2 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC2_swigregister(itkZeroDCImageFilterIUC2)
itkZeroDCImageFilterIUC2___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC2___New_orig__
itkZeroDCImageFilterIUC2_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC2_cast


def itkZeroDCImageFilterIUC3_New():
    return itkZeroDCImageFilterIUC3.New()

class itkZeroDCImageFilterIUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkZeroDCImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC3_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC3_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC3_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterIUC3
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterIUC3

        Create a new object of the class itkZeroDCImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterIUC3 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC3_swigregister(itkZeroDCImageFilterIUC3)
itkZeroDCImageFilterIUC3___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC3___New_orig__
itkZeroDCImageFilterIUC3_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC3_cast


def itkZeroDCImageFilterIUC4_New():
    return itkZeroDCImageFilterIUC4.New()

class itkZeroDCImageFilterIUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkZeroDCImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC4_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC4_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC4_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterIUC4
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterIUC4

        Create a new object of the class itkZeroDCImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterIUC4 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC4_swigregister(itkZeroDCImageFilterIUC4)
itkZeroDCImageFilterIUC4___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC4___New_orig__
itkZeroDCImageFilterIUC4_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUC4_cast


def itkZeroDCImageFilterIUS2_New():
    return itkZeroDCImageFilterIUS2.New()

class itkZeroDCImageFilterIUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkZeroDCImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS2_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS2_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS2_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterIUS2
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterIUS2

        Create a new object of the class itkZeroDCImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterIUS2 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS2_swigregister(itkZeroDCImageFilterIUS2)
itkZeroDCImageFilterIUS2___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS2___New_orig__
itkZeroDCImageFilterIUS2_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS2_cast


def itkZeroDCImageFilterIUS3_New():
    return itkZeroDCImageFilterIUS3.New()

class itkZeroDCImageFilterIUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkZeroDCImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS3_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS3_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS3_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterIUS3
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterIUS3

        Create a new object of the class itkZeroDCImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterIUS3 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS3_swigregister(itkZeroDCImageFilterIUS3)
itkZeroDCImageFilterIUS3___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS3___New_orig__
itkZeroDCImageFilterIUS3_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS3_cast


def itkZeroDCImageFilterIUS4_New():
    return itkZeroDCImageFilterIUS4.New()

class itkZeroDCImageFilterIUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkZeroDCImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS4_Clone)
    ImageTypeHasNumericTraitsCheck = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS4_ImageTypeHasNumericTraitsCheck
    
    GetMean = _swig_new_instance_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS4_GetMean)
    __swig_destroy__ = _itkZeroDCImageFilterPython.delete_itkZeroDCImageFilterIUS4
    cast = _swig_new_static_method(_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkZeroDCImageFilterIUS4

        Create a new object of the class itkZeroDCImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkZeroDCImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkZeroDCImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkZeroDCImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkZeroDCImageFilterIUS4 in _itkZeroDCImageFilterPython:
_itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS4_swigregister(itkZeroDCImageFilterIUS4)
itkZeroDCImageFilterIUS4___New_orig__ = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS4___New_orig__
itkZeroDCImageFilterIUS4_cast = _itkZeroDCImageFilterPython.itkZeroDCImageFilterIUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def zero_dc_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ZeroDCImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ZeroDCImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def zero_dc_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.IsotropicWavelets.ZeroDCImageFilter
    zero_dc_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    zero_dc_image_filter.__doc__ = filter_object.__doc__




