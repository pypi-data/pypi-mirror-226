# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _IsotropicWaveletsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkIsotropicFrequencyFunctionPython
else:
    import _itkIsotropicFrequencyFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkIsotropicFrequencyFunctionPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkIsotropicFrequencyFunctionPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkFrequencyFunctionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
class itkIsotropicFrequencyFunctionD2VD2(itk.itkFrequencyFunctionPython.itkFrequencyFunctionD2VD2):
    r"""Proxy of C++ itkIsotropicFrequencyFunctionD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Magnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD2VD2_Magnitude)
    EvaluateMagnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD2VD2_EvaluateMagnitude)
    __swig_destroy__ = _itkIsotropicFrequencyFunctionPython.delete_itkIsotropicFrequencyFunctionD2VD2
    cast = _swig_new_static_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD2VD2_cast)

# Register itkIsotropicFrequencyFunctionD2VD2 in _itkIsotropicFrequencyFunctionPython:
_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD2VD2_swigregister(itkIsotropicFrequencyFunctionD2VD2)
itkIsotropicFrequencyFunctionD2VD2_cast = _itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD2VD2_cast

class itkIsotropicFrequencyFunctionD3VD3(itk.itkFrequencyFunctionPython.itkFrequencyFunctionD3VD3):
    r"""Proxy of C++ itkIsotropicFrequencyFunctionD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Magnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD3VD3_Magnitude)
    EvaluateMagnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD3VD3_EvaluateMagnitude)
    __swig_destroy__ = _itkIsotropicFrequencyFunctionPython.delete_itkIsotropicFrequencyFunctionD3VD3
    cast = _swig_new_static_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD3VD3_cast)

# Register itkIsotropicFrequencyFunctionD3VD3 in _itkIsotropicFrequencyFunctionPython:
_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD3VD3_swigregister(itkIsotropicFrequencyFunctionD3VD3)
itkIsotropicFrequencyFunctionD3VD3_cast = _itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD3VD3_cast

class itkIsotropicFrequencyFunctionD4VD4(itk.itkFrequencyFunctionPython.itkFrequencyFunctionD4VD4):
    r"""Proxy of C++ itkIsotropicFrequencyFunctionD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Magnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD4VD4_Magnitude)
    EvaluateMagnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD4VD4_EvaluateMagnitude)
    __swig_destroy__ = _itkIsotropicFrequencyFunctionPython.delete_itkIsotropicFrequencyFunctionD4VD4
    cast = _swig_new_static_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD4VD4_cast)

# Register itkIsotropicFrequencyFunctionD4VD4 in _itkIsotropicFrequencyFunctionPython:
_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD4VD4_swigregister(itkIsotropicFrequencyFunctionD4VD4)
itkIsotropicFrequencyFunctionD4VD4_cast = _itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionD4VD4_cast

class itkIsotropicFrequencyFunctionF2VD2(itk.itkFrequencyFunctionPython.itkFrequencyFunctionF2VD2):
    r"""Proxy of C++ itkIsotropicFrequencyFunctionF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Magnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF2VD2_Magnitude)
    EvaluateMagnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF2VD2_EvaluateMagnitude)
    __swig_destroy__ = _itkIsotropicFrequencyFunctionPython.delete_itkIsotropicFrequencyFunctionF2VD2
    cast = _swig_new_static_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF2VD2_cast)

# Register itkIsotropicFrequencyFunctionF2VD2 in _itkIsotropicFrequencyFunctionPython:
_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF2VD2_swigregister(itkIsotropicFrequencyFunctionF2VD2)
itkIsotropicFrequencyFunctionF2VD2_cast = _itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF2VD2_cast

class itkIsotropicFrequencyFunctionF3VD3(itk.itkFrequencyFunctionPython.itkFrequencyFunctionF3VD3):
    r"""Proxy of C++ itkIsotropicFrequencyFunctionF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Magnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF3VD3_Magnitude)
    EvaluateMagnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF3VD3_EvaluateMagnitude)
    __swig_destroy__ = _itkIsotropicFrequencyFunctionPython.delete_itkIsotropicFrequencyFunctionF3VD3
    cast = _swig_new_static_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF3VD3_cast)

# Register itkIsotropicFrequencyFunctionF3VD3 in _itkIsotropicFrequencyFunctionPython:
_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF3VD3_swigregister(itkIsotropicFrequencyFunctionF3VD3)
itkIsotropicFrequencyFunctionF3VD3_cast = _itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF3VD3_cast

class itkIsotropicFrequencyFunctionF4VD4(itk.itkFrequencyFunctionPython.itkFrequencyFunctionF4VD4):
    r"""Proxy of C++ itkIsotropicFrequencyFunctionF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Magnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF4VD4_Magnitude)
    EvaluateMagnitude = _swig_new_instance_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF4VD4_EvaluateMagnitude)
    __swig_destroy__ = _itkIsotropicFrequencyFunctionPython.delete_itkIsotropicFrequencyFunctionF4VD4
    cast = _swig_new_static_method(_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF4VD4_cast)

# Register itkIsotropicFrequencyFunctionF4VD4 in _itkIsotropicFrequencyFunctionPython:
_itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF4VD4_swigregister(itkIsotropicFrequencyFunctionF4VD4)
itkIsotropicFrequencyFunctionF4VD4_cast = _itkIsotropicFrequencyFunctionPython.itkIsotropicFrequencyFunctionF4VD4_cast



