# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _IsotropicWaveletsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkWaveletFrequencyInverseUndecimatedPython
else:
    import _itkWaveletFrequencyInverseUndecimatedPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkWaveletFrequencyInverseUndecimatedPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkWaveletFrequencyInverseUndecimatedPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterBPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterCommonPython

def itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldD2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2HeldF2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonD2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2ShannonF2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliD2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2SimoncelliF2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowD2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2)
itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD2ICD2VowF2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldD3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3HeldF3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonD3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3ShannonF3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliD3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3SimoncelliF3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowD3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3)
itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD3ICD3VowF3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldD4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4HeldF4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonD4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4ShannonF4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliD4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4SimoncelliF4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowD4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4)
itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICD4ICD4VowF4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldD2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2HeldF2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonD2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2ShannonF2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliD2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2SimoncelliF2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowD2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_New():
    return itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2.New()

class itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_swigregister(itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2)
itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2___New_orig__
itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF2ICF2VowF2VD2_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldD3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3HeldF3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonD3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3ShannonF3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliD3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3SimoncelliF3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowD3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_New():
    return itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3.New()

class itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_swigregister(itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3)
itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3___New_orig__
itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF3ICF3VowF3VD3_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldD4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4HeldF4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonD4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4ShannonF4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliD4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4SimoncelliF4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowD4VD4_cast


def itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_New():
    return itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4.New()

class itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4___New_orig__)
    Clone = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_Clone)
    SetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_SetLevels)
    GetLevels = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_GetLevels)
    SetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_SetHighPassSubBands)
    GetHighPassSubBands = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_GetHighPassSubBands)
    GetTotalInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_GetTotalInputs)
    GetScaleFactor = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_GetScaleFactor)
    GetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_GetApplyReconstructionFactors)
    SetApplyReconstructionFactors = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_SetApplyReconstructionFactors)
    ApplyReconstructionFactorsOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_ApplyReconstructionFactorsOn)
    ApplyReconstructionFactorsOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_ApplyReconstructionFactorsOff)
    GetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_GetUseWaveletFilterBankPyramid)
    SetUseWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_SetUseWaveletFilterBankPyramid)
    UseWaveletFilterBankPyramidOn = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_UseWaveletFilterBankPyramidOn)
    UseWaveletFilterBankPyramidOff = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_UseWaveletFilterBankPyramidOff)
    SetWaveletFilterBankPyramid = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_SetWaveletFilterBankPyramid)
    InputIndexToLevelBand = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_InputIndexToLevelBand)
    SetInputs = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_SetInputs)
    SetInputLowPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_SetInputLowPass)
    SetInputsHighPass = _swig_new_instance_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_SetInputsHighPass)
    __swig_destroy__ = _itkWaveletFrequencyInverseUndecimatedPython.delete_itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4
    cast = _swig_new_static_method(_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_cast)

    def New(*args, **kargs):
        """New() -> itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4

        Create a new object of the class itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4 in _itkWaveletFrequencyInverseUndecimatedPython:
_itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_swigregister(itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4)
itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4___New_orig__ = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4___New_orig__
itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_cast = _itkWaveletFrequencyInverseUndecimatedPython.itkWaveletFrequencyInverseUndecimatedICF4ICF4VowF4VD4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def wavelet_frequency_inverse_undecimated(*args: itkt.ImageLike,  levels: int=..., high_pass_sub_bands: int=..., apply_reconstruction_factors: bool=..., use_wavelet_filter_bank_pyramid: bool=..., wavelet_filter_bank_pyramid=..., inputs=..., input_low_pass=..., inputs_high_pass=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for WaveletFrequencyInverseUndecimated"""
    import itk

    kwarg_typehints = { 'levels':levels,'high_pass_sub_bands':high_pass_sub_bands,'apply_reconstruction_factors':apply_reconstruction_factors,'use_wavelet_filter_bank_pyramid':use_wavelet_filter_bank_pyramid,'wavelet_filter_bank_pyramid':wavelet_filter_bank_pyramid,'inputs':inputs,'input_low_pass':input_low_pass,'inputs_high_pass':inputs_high_pass }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.WaveletFrequencyInverseUndecimated.New(*args, **kwargs)
    return instance.__internal_call__()

def wavelet_frequency_inverse_undecimated_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.IsotropicWavelets.WaveletFrequencyInverseUndecimated
    wavelet_frequency_inverse_undecimated.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    wavelet_frequency_inverse_undecimated.__doc__ = filter_object.__doc__




