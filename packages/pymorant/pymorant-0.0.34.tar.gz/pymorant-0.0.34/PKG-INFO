Metadata-Version: 2.1
Name: pymorant
Version: 0.0.34
Summary: Paquetería de funciones para el equipo de AI Morant en Python
Home-page: https://github.com/morant-consultores/py_morant
Author: Equipo AI Morant
Author-email: abravo@morant.com.mx
Project-URL: Bug Tracker, https://github.com/morant-consultores/py_morant/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# Py-morant

Este proyecto incluye varias funciones útiles que desempeñan diferentes tareas.

## Instalación

Para instalar la paquetería pymorant en tu terminal escribe. 
```
pip install pymorant
```
Es recomendado usar un [ambiente virtual](https://docs.python.org/3/library/venv.html).

## Funciones

### 1. corregir_texto
```py
from pymorant import corregir_texto
```

Regresa el texto corregido ortográficamente, utilizando el modelo de lenguaje especificado.

**Parámetros**
- text (str): texto original
- model (str): modelo de lenguaje a utilizar
- openai_key (str): llave de OpenAI

**Retorna**
- cleaned_text (str): texto limpio

### 2. generar_variantes_texto
```py
from pymorant import generar_variantes_texto
```

Regresa una lista de n variantes del texto original, utilizando el modelo de lenguaje especificado. Si formal=True, se generan variantes formales.

**Parámetros**
- text (str): texto original
- n (int): número de variantes a generar
- model (str): modelo de lenguaje a utilizar
- openai_key (str): llave de OpenAI
- formal (bool): si True, se generan variantes formales
- sex: sexo de la persona a la que se dirige el texto. Puede ser "H" (hombre), "M" (mujer) o "NA" (no aplica).

**Retorna**
- lista (list): lista con n variaciones del texto original

### 3. resumir_texto
```py
from pymorant import resumir_texto
```

Regresa un resumen del texto original, utilizando el modelo de lenguaje especificado.

**Parámetros**
- text (str): texto original
- model (str): modelo de lenguaje a utilizar
- openai_key (str): llave de OpenAI
- input_autogenerado (bool): si True, si el input es auto-generado por el modelo previamente.

**Retorna**
- texto (str): resumen del texto original

### 4. generar_categorias
```py
from pymorant import generar_categorias
```

Regresa una lista de n categorías del texto original, utilizando el modelo de lenguaje. especificado.

**Parámetros**
- text (str): texto original
- n (int): número de categorías a generar
- model (str): modelo de lenguaje a utilizar
- openai_key (str): llave de OpenAI

**Retorna**
- lista (list): lista de n categorias del texto original


## License
MIT
