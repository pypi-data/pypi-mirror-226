# coding: utf-8

"""
    PrintNanny Factory API Documentation

    Documentation of API endpoints of printnanny-factory  # noqa: E501

    The version of the OpenAPI document: 0.1.0 
    Contact: leigh@printnanny.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import printnanny_factory_rest_api
from printnanny_factory_rest_api.models.workspace import Workspace  # noqa: E501
from printnanny_factory_rest_api.rest import ApiException

class TestWorkspace(unittest.TestCase):
    """Workspace unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Workspace
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Workspace`
        """
        model = printnanny_factory_rest_api.models.workspace.Workspace()  # noqa: E501
        if include_optional :
            return Workspace(
                id = '', 
                name = '', 
                domain = '', 
                domain_autojoin = True, 
                url = '', 
                slug = 'z', 
                users = [
                    printnanny_factory_rest_api.models.user.User(
                        name = '', 
                        url = '', 
                        email = '', 
                        id = '', )
                    ], 
                icon = '', 
                owner = printnanny_factory_rest_api.models.workspace_owner.WorkspaceOwner(
                    id = '', 
                    organization_user = printnanny_factory_rest_api.models.workspace_user.WorkspaceUser(
                        id = '', 
                        user = printnanny_factory_rest_api.models.user.User(
                            name = '', 
                            url = '', 
                            email = '', 
                            id = '', ), 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_admin = True, 
                        organization = '', ), 
                    created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    organization = '', ), 
                pending_invites = [
                    printnanny_factory_rest_api.models.workspace_invitation.WorkspaceInvitation(
                        id = '', 
                        invitee = '', 
                        invited_by = '', 
                        workspace = '', 
                        guid = '', 
                        invitee_identifier = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ], 
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else :
            return Workspace(
                id = '',
                name = '',
                url = '',
                slug = 'z',
                users = [
                    printnanny_factory_rest_api.models.user.User(
                        name = '', 
                        url = '', 
                        email = '', 
                        id = '', )
                    ],
                owner = printnanny_factory_rest_api.models.workspace_owner.WorkspaceOwner(
                    id = '', 
                    organization_user = printnanny_factory_rest_api.models.workspace_user.WorkspaceUser(
                        id = '', 
                        user = printnanny_factory_rest_api.models.user.User(
                            name = '', 
                            url = '', 
                            email = '', 
                            id = '', ), 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        is_admin = True, 
                        organization = '', ), 
                    created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    organization = '', ),
                pending_invites = [
                    printnanny_factory_rest_api.models.workspace_invitation.WorkspaceInvitation(
                        id = '', 
                        invitee = '', 
                        invited_by = '', 
                        workspace = '', 
                        guid = '', 
                        invitee_identifier = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testWorkspace(self):
        """Test Workspace"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
