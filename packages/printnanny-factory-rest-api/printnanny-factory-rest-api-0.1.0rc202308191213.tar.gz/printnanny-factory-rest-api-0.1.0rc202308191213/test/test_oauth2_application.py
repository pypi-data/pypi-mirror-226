# coding: utf-8

"""
    PrintNanny Factory API Documentation

    Documentation of API endpoints of printnanny-factory  # noqa: E501

    The version of the OpenAPI document: 0.1.0 
    Contact: leigh@printnanny.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import printnanny_factory_rest_api
from printnanny_factory_rest_api.models.oauth2_application import Oauth2Application  # noqa: E501
from printnanny_factory_rest_api.rest import ApiException

class TestOauth2Application(unittest.TestCase):
    """Oauth2Application unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Oauth2Application
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Oauth2Application`
        """
        model = printnanny_factory_rest_api.models.oauth2_application.Oauth2Application()  # noqa: E501
        if include_optional :
            return Oauth2Application(
                id = '', 
                api_url = '', 
                client_id = '', 
                client_secret = '', 
                default_scopes = '', 
                authorization_grant_type = 'authorization-code', 
                client_type = 'confidential', 
                name = '', 
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                workspace = '', 
                printer = ''
            )
        else :
            return Oauth2Application(
                id = '',
                api_url = '',
                authorization_grant_type = 'authorization-code',
                client_type = 'confidential',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testOauth2Application(self):
        """Test Oauth2Application"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
