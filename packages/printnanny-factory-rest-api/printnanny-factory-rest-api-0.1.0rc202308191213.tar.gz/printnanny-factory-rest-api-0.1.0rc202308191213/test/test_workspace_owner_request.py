# coding: utf-8

"""
    PrintNanny Factory API Documentation

    Documentation of API endpoints of printnanny-factory  # noqa: E501

    The version of the OpenAPI document: 0.1.0 
    Contact: leigh@printnanny.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import printnanny_factory_rest_api
from printnanny_factory_rest_api.models.workspace_owner_request import WorkspaceOwnerRequest  # noqa: E501
from printnanny_factory_rest_api.rest import ApiException

class TestWorkspaceOwnerRequest(unittest.TestCase):
    """WorkspaceOwnerRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test WorkspaceOwnerRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkspaceOwnerRequest`
        """
        model = printnanny_factory_rest_api.models.workspace_owner_request.WorkspaceOwnerRequest()  # noqa: E501
        if include_optional :
            return WorkspaceOwnerRequest(
                organization_user = printnanny_factory_rest_api.models.workspace_user_request.WorkspaceUserRequest(
                    user = printnanny_factory_rest_api.models.user_request.UserRequest(
                        name = '', 
                        email = '0', ), 
                    is_admin = True, 
                    organization = '', ), 
                organization = ''
            )
        else :
            return WorkspaceOwnerRequest(
                organization_user = printnanny_factory_rest_api.models.workspace_user_request.WorkspaceUserRequest(
                    user = printnanny_factory_rest_api.models.user_request.UserRequest(
                        name = '', 
                        email = '0', ), 
                    is_admin = True, 
                    organization = '', ),
                organization = '',
        )
        """

    def testWorkspaceOwnerRequest(self):
        """Test WorkspaceOwnerRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
