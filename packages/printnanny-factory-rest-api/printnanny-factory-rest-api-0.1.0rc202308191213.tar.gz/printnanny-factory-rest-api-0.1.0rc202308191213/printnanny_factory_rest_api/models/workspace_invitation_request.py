# coding: utf-8

"""
    PrintNanny Factory API Documentation

    Documentation of API endpoints of printnanny-factory  # noqa: E501

    The version of the OpenAPI document: 0.1.0 
    Contact: leigh@printnanny.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, constr

class WorkspaceInvitationRequest(BaseModel):
    """
    WorkspaceInvitationRequest
    """
    invitee_identifier: constr(strict=True, max_length=1000, min_length=1) = Field(..., description="The contact identifier for the invitee, email, phone number, social media handle, etc.")
    __properties = ["invitee_identifier"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> WorkspaceInvitationRequest:
        """Create an instance of WorkspaceInvitationRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> WorkspaceInvitationRequest:
        """Create an instance of WorkspaceInvitationRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return WorkspaceInvitationRequest.parse_obj(obj)

        # raise errors for additional fields in the input
        for _key in obj.keys():
            if _key not in cls.__properties:
                raise ValueError("Error due to additional fields (not defined in WorkspaceInvitationRequest) in the input: " + obj)

        _obj = WorkspaceInvitationRequest.parse_obj({
            "invitee_identifier": obj.get("invitee_identifier")
        })
        return _obj

