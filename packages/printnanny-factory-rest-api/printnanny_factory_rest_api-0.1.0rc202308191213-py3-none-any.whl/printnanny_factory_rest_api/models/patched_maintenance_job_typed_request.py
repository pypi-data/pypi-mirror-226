# coding: utf-8

"""
    PrintNanny Factory API Documentation

    Documentation of API endpoints of printnanny-factory  # noqa: E501

    The version of the OpenAPI document: 0.1.0 
    Contact: leigh@printnanny.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, StrictStr
from printnanny_factory_rest_api.models.patched_maintenance_job_request import PatchedMaintenanceJobRequest

class PatchedMaintenanceJobTypedRequest(PatchedMaintenanceJobRequest):
    """
    PatchedMaintenanceJobTypedRequest
    """
    resourcetype: Optional[StrictStr] = None
    __properties = ["resourcetype", "created_by", "end_dt", "notes", "printer", "start_dt", "title", "workspace", "assigned_to"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> PatchedMaintenanceJobTypedRequest:
        """Create an instance of PatchedMaintenanceJobTypedRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> PatchedMaintenanceJobTypedRequest:
        """Create an instance of PatchedMaintenanceJobTypedRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return PatchedMaintenanceJobTypedRequest.parse_obj(obj)

        # raise errors for additional fields in the input
        for _key in obj.keys():
            if _key not in cls.__properties:
                raise ValueError("Error due to additional fields (not defined in PatchedMaintenanceJobTypedRequest) in the input: " + obj)

        _obj = PatchedMaintenanceJobTypedRequest.parse_obj({
            "resourcetype": obj.get("resourcetype"),
            "created_by": obj.get("created_by"),
            "end_dt": obj.get("end_dt"),
            "notes": obj.get("notes"),
            "printer": obj.get("printer"),
            "start_dt": obj.get("start_dt"),
            "title": obj.get("title"),
            "workspace": obj.get("workspace"),
            "assigned_to": obj.get("assigned_to")
        })
        return _obj

