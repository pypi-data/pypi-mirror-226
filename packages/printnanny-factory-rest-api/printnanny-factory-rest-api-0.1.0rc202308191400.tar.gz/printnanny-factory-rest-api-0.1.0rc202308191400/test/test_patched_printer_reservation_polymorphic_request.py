# coding: utf-8

"""
    PrintNanny Factory API Documentation

    Documentation of API endpoints of printnanny-factory  # noqa: E501

    The version of the OpenAPI document: 0.1.0 
    Contact: leigh@printnanny.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import printnanny_factory_rest_api
from printnanny_factory_rest_api.models.patched_printer_reservation_polymorphic_request import PatchedPrinterReservationPolymorphicRequest  # noqa: E501
from printnanny_factory_rest_api.rest import ApiException

class TestPatchedPrinterReservationPolymorphicRequest(unittest.TestCase):
    """PatchedPrinterReservationPolymorphicRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PatchedPrinterReservationPolymorphicRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatchedPrinterReservationPolymorphicRequest`
        """
        model = printnanny_factory_rest_api.models.patched_printer_reservation_polymorphic_request.PatchedPrinterReservationPolymorphicRequest()  # noqa: E501
        if include_optional :
            return PatchedPrinterReservationPolymorphicRequest(
                created_by = '', 
                end_dt = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                notes = '', 
                printer = '', 
                start_dt = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                title = '0', 
                workspace = ''
            )
        else :
            return PatchedPrinterReservationPolymorphicRequest(
        )
        """

    def testPatchedPrinterReservationPolymorphicRequest(self):
        """Test PatchedPrinterReservationPolymorphicRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
