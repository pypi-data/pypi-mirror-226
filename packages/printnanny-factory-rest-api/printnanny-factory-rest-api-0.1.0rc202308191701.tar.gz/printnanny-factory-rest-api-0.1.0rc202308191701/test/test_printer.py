# coding: utf-8

"""
    PrintNanny Factory API Documentation

    Documentation of API endpoints of printnanny-factory  # noqa: E501

    The version of the OpenAPI document: 0.1.0 
    Contact: leigh@printnanny.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import printnanny_factory_rest_api
from printnanny_factory_rest_api.models.printer import Printer  # noqa: E501
from printnanny_factory_rest_api.rest import ApiException

class TestPrinter(unittest.TestCase):
    """Printer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Printer
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Printer`
        """
        model = printnanny_factory_rest_api.models.printer.Printer()  # noqa: E501
        if include_optional :
            return Printer(
                id = '', 
                oem = printnanny_factory_rest_api.models.printer_oem.PrinterOEM(
                    id = '', 
                    manufacturer = '', 
                    model = '', 
                    backend = 'duet3d', 
                    build_volume_x = -2147483648, 
                    build_volume_y = -2147483648, 
                    build_volume_z = -2147483648, 
                    thumbnail = '', 
                    created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                backend_data = printnanny_factory_rest_api.models.duet_printer_backend.DuetPrinterBackend(
                    id = '', 
                    deleted = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleted_by_cascade = True, 
                    network = {
                        'key' : null
                        }, 
                    job = {
                        'key' : null
                        }, 
                    status = 'disconnected', 
                    last_message = '', 
                    last_message_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    tz = '', 
                    modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    printer = '', ), 
                workspace = '', 
                oauth_application = [
                    printnanny_factory_rest_api.models.oauth2_application.Oauth2Application(
                        id = '', 
                        api_url = '', 
                        client_id = '', 
                        client_secret = '', 
                        default_scopes = '', 
                        authorization_grant_type = 'authorization-code', 
                        client_type = 'confidential', 
                        name = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        workspace = '', 
                        printer = '', )
                    ], 
                name = '', 
                bed_cleared = True, 
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                filament = '', 
                nozzle = '', 
                bed = ''
            )
        else :
            return Printer(
                id = '',
                oem = printnanny_factory_rest_api.models.printer_oem.PrinterOEM(
                    id = '', 
                    manufacturer = '', 
                    model = '', 
                    backend = 'duet3d', 
                    build_volume_x = -2147483648, 
                    build_volume_y = -2147483648, 
                    build_volume_z = -2147483648, 
                    thumbnail = '', 
                    created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                backend_data = printnanny_factory_rest_api.models.duet_printer_backend.DuetPrinterBackend(
                    id = '', 
                    deleted = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleted_by_cascade = True, 
                    network = {
                        'key' : null
                        }, 
                    job = {
                        'key' : null
                        }, 
                    status = 'disconnected', 
                    last_message = '', 
                    last_message_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    tz = '', 
                    modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    printer = '', ),
                workspace = '',
                oauth_application = [
                    printnanny_factory_rest_api.models.oauth2_application.Oauth2Application(
                        id = '', 
                        api_url = '', 
                        client_id = '', 
                        client_secret = '', 
                        default_scopes = '', 
                        authorization_grant_type = 'authorization-code', 
                        client_type = 'confidential', 
                        name = '', 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        workspace = '', 
                        printer = '', )
                    ],
                name = '',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testPrinter(self):
        """Test Printer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
