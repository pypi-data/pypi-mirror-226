"use strict";(self.webpackChunketc_jupyterlab_telemetry_producer_demo=self.webpackChunketc_jupyterlab_telemetry_producer_demo||[]).push([[735,133],{133:(e,o,t)=>{t.r(o),t.d(o,{ITelemetryRouter:()=>a,default:()=>d});var n=t(930),s=t(519),i=t(380);async function r(e="",o={}){const t=i.ServerConnection.makeSettings(),n=s.URLExt.join(t.baseUrl,"telemetry-router",e);let r;try{r=await i.ServerConnection.makeRequest(n,o,t)}catch(e){throw new i.ServerConnection.NetworkError(e)}let l=await r.text();if(l.length>0)try{l=JSON.parse(l)}catch(e){console.log("Not a JSON response body.",r)}if(!r.ok)throw new i.ServerConnection.ResponseError(r,l.message||l);return l}const l="telemetry-router:plugin",a=new n.Token(l);class c{async loadNotebookPanel(e){this.notebookPanel=e}async publishEvent(e,o){var t,n,s,i,l,a,c;if(!this.notebookPanel)throw Error("router needs to load notebookPanel first.");this.sessionID&&this.sessionID===(null===(n=null===(t=this.notebookPanel)||void 0===t?void 0:t.sessionContext.session)||void 0===n?void 0:n.id)||(this.sessionID=null===(i=null===(s=this.notebookPanel)||void 0===s?void 0:s.sessionContext.session)||void 0===i?void 0:i.id);const d={eventDetail:e,notebookState:{sessionID:this.sessionID,notebookPath:null===(l=this.notebookPanel)||void 0===l?void 0:l.context.path,notebookContent:o?null===(c=null===(a=this.notebookPanel)||void 0===a?void 0:a.model)||void 0===c?void 0:c.toJSON():null}},u=await r("export",{method:"POST",body:JSON.stringify(d)});console.log(u)}}const d={id:l,provides:a,autoStart:!0,activate:async function(e){const o=await r("version");return console.log(`${l}: ${o}`),new c}}}}]);