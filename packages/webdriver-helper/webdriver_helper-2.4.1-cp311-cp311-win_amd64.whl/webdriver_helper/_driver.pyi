from _typeshed import Incomplete
from appium.webdriver.webdriver import WebDriver as OAppiumWebDriver
from appium.webdriver.webelement import WebElement as OAppiumWebElement
from pathlib import Path
from selenium import webdriver
from selenium.webdriver.common.selenium_manager import SeleniumManager
from selenium.webdriver.remote.webdriver import WebDriver as OSeleniumWebDriver
from selenium.webdriver.remote.webelement import WebElement as OSeleniumWebElement
from typing import List, Union

logger: Incomplete

class SanmuSeleniumManager(SeleniumManager):
    @staticmethod
    def run(args: List[str]) -> dict: ...

class WebElement(OSeleniumWebElement):
    def upload_by_drop(self, file_path: Union[str, Path]) -> None: ...

class WebDriver(webdriver.Remote):
    def create_web_element(self, element_id: Union[int, str]) -> WebElement: ...
    def execute_cdp_cmd(self, *args, **kwargs): ...
    def set_download_path(self, path: Union[Path, str]): ...
    def debugger(self): ...
    def set_think_time(self, think_time: float): ...
    def execute(self, *args, **kwargs): ...
    def find_element(self, *args, **kwargs) -> WebElement: ...
    def find_elements(self, *args, **kwargs) -> List[WebElement]: ...

class SeleniumRemote(WebDriver, OSeleniumWebDriver): ...

class AppiumRemote(WebDriver, OAppiumWebDriver):
    class _web_element_cls(OAppiumWebElement): ...

class Chrome(WebDriver, webdriver.Chrome): ...
class Edge(WebDriver, webdriver.Edge): ...
class Firefox(WebDriver, webdriver.Firefox): ...
class Ie(WebDriver, webdriver.Ie): ...
