# AUTO GENERATED FILE. DO NOT EDIT!
from setuptools import setup
setup(
	name='kandinsky',
	version='2.6',
	author='ZetaMap',
	description='A small module allowing to link the kandinsky module, from the Numworks, to a window.',
	license='MIT',
	long_description='![Visitor Badge](https://visitor-badge.laobi.icu/badge?page_id=ZetaMap.Kandinsky-Numworks) ![Downloads](https://shields.io/github/downloads/ZetaMap/Kandinsky-Numworks/total) ![pip](https://img.shields.io/pypi/dm/kandinsky?label=pip_downloads) ![GitHub Clones](https://img.shields.io/badge/dynamic/json?color=success&label=clones&query=count&url=https://gist.githubusercontent.com/ZetaMap/d3a3bcef3e64ffa553c11c173a444a97/raw/clone.json&logo=github)\n# Kandinsky-Numworks\n**This module depend to [PySDL2](https://pysdl2.readthedocs.io/en/latest/) module and sdl2 libraries, PySDL2 is just an [sdl2](https://www.libsdl.org/) wrapper with ctype and it just call methods in sdl2 library. To install both modules, click [here](https://github.com/ZetaMap/Kandinsky-Numworks/blob/pysdl2/FAQ.md#how-to-install-pysdl2) and follow steps.** <br>\n\nThis module allowing to link the kandinsky module, from the Numworks, to a window. Useful if you want to test your program without putting it on the calculator. <br>\nIn addition, this module also emulates the drawing speed, and has [many other features](https://github.com/ZetaMap/Kandinsky-Numworks/blob/pysdl2/README.md#additional-features).\n\n\n### Installation\nYou now have the option to install this module on [pypi.org](https://pypi.org/project/kandinsky/). For that, follow the steps [here](https://github.com/ZetaMap/Kandinsky-Numworks/blob/pysdl2/FAQ.md#how-to-install-this-module).\n\nOr if you want, you can build the module, just run command ``python builder.py``. <br>\nThis will be generate a setup.py, install module build, build library, and install it.\n\n### More\nI also recreated the ion module of the Numworks, check it out here: [Ion module of Numworks](https://github.com/ZetaMap/Ion-numworks)<br>\nIf you have a question, check out the [FAQ](https://github.com/ZetaMap/Kandinsky-Numworks/blob/pysdl2/FAQ.md). And if you have a suggestion or your question is not answered, open an [Issue](https://github.com/ZetaMap/Kandinsky-Numworks/issues/new).\n\n\n### Usable content\n#### ***Numworks, aka basic, methods***\n\n**get_pixel()**:\n* Parameters: ``x``, ``y``\n* Description: Return pixel (x, y) color\n\n**set_pixel():**\n* Parameters: ``x``, ``y``, ``color``\n* Description: Color pixel (x, y)\n\n**color():**\n* Parameters: ``r``, ``g``, ``b``\n* Description: Define a rgb color\n\n**draw_string():**\n* Parameters: ``text``, ``x``, ``y``, ``color`` **[default: (0,0,0)]**, ``background`` **[default: (248,252,248)]**, *(Omega & Upsilon only: ``font`` **[default: False]**)*\n* Description: Display a text from pixel (x, y)\n* Note: parameter ``font`` is only for Omega and Upsilon and it\'s to chose between small and large font.\n\n**fill_rect():**\n* Parameters: ``x``, ``y``, ``width``, ``height``, ``color``\n* Description: Fill a rectangle at pixel (x, y)\n\n#### ***New method for this library, only on Computer***\n\n**quit():**\n* Parameters: **No parameters**\n* Description: Close manualy the window without notifying the user\n* Note: after that you cannot reopen the window, so a re-import of kandinsky will be required to get a new window\n\n**display():**\n* Parameters: **No parameters**\n* Description: Refresh manually the window and display changes\n* Note: **⚠️Method added only for MacOS, because library cannot refresh automatically the window in another Thread. <br>\nIt will be necessary to call this method from time to time to keep it alive.⚠️**\n\n#### ***New methods added by Omega (previous methods are also added)***\n\n**draw_line()**\n* Parameters: ``x1``, ``y1``, ``x2``, ``y2``, ``color``\n* Description: Draw a line at (x1, y1) to (x2, y2)\n\n**wait_vblank()**\n* Parameters: **No parameters**\n* Description: Wait for screen refresh\n\n**get_keys()**\n* Parameters: **No parameters**\n* Description: Get name of pressed keys\n\n#### ***New methods added by Upsilon (previous methods are also added except get_keys())***\n\n**draw_circle()**\n* Parameters: ``x``, ``y``, ``r``, ``color``\n* Description: Draw circle at (x, y) of radius r\n\n**fill_circle()**\n* Parameters:  ``x``, ``y``, ``r``, ``color``\n* Description: Fill circle at (x, y) of radius r\n\n**fill_polygon()**\n* Parameters: ``points``, ``color``\n* Description: Fill polygon at points [(x1, y1), ...]\n\n**get_palette()**\n* Parameters: **No parameters**\n* Description: Get theme palette\n\n\n### Additional features\n#### A GUI to control emulator\n\n* **Pause/resume:** You can pause/resume your script <br> \n*Note:* This will just pause the calls of kandinsky. So for the script to pause, it must be called one of the functions of the library\n\n* **Screenshot:** You can also take a screenshot of window <br>\n*Note:* This take just the numworks interface and drawable area, not the GUI\n\n* **Change OS:** Change the speed of execution. You have chose of **Numworks**, **Omega**, **Upsilon**, and **PC** mode <br>\n*Note:* Only work for kandinsky methods\n\n* **Change model:** Change the model of numworks. You have chose of **n0100**, **n0110**, and the new model **n0120** <br>\n*Note:* This change the speed python execution emulation of numworks\n\n* **Shorcut command:** All the features mentioned have a shortcut command. More info in the "Help" button of the window\n\n#### Environ options\n**/!\\\\ You must make its additions *before* importing kandinsky otherwise the changes will not take effect! /!\\\\**\n\nYou can also change some default option of library, like the OS or model on which to start kandinsky, etc. <br> \nTo do this, first import the environ of os module like this: ``import os``.\n\n* Enable debug mode:\n```python\nos.environ[\'KANDINSKY_ENABLE_DEBUG\'] = \'\' \n```\n\n* Change starting OS (methods according to the selected os will be created):\n```python\n# \'0\': PC speed + Upsilon methods\n# \'1\': Numworks speed + Basic methods\n# \'2\': Omega speed + draw_line,wait_vblank,get_keys method\n# \'3\': Upsilon speed + draw_circle,fill_circle,fill_polygon,get_palette methods - get_keys\nos.environ[\'KANDINSKY_OS_MODE\'] = \'<number>\'\n```\n\n* Change starting Model:\n```python\n# \'0\': n0100 model speed (not available for moment)\n# \'1\': n0110 model speed\n# \'2\': n0120 model speed (not available for moment)\nos.environ[\'KANDINSKY_MODEL_MODE\'] = \'<number>\'\n```\n\n* Disable user interface (menu at top of window):\n```python\n# Note: Shortcut commands are not disabled\nos.environ[\'KANDINSKY_NO_GUI\'] = \'\'\n```\n\n* Change size of screen:\n```python\nos.environ[\'KANDINSKY_SCREEN_SIZE\'] = "<width>x<height>"\n```\n\n* Zoom the screen:\n```python\n# from 1 to 4\nos.environ[\'KANDINSKY_ZOOM_RATIO\'] = "<number>"\n```\n',
	long_description_content_type='text/markdown',
	url='https://github.com/ZetaMap/Kandinsky-Numworks',
	project_urls={'GitHub Project': 'https://github.com/ZetaMap/Kandinsky-Numworks', 'My GitHub Page': 'https://github.com/ZetaMap/'},
	classifiers=['Programming Language :: Python :: 3', 'License :: OSI Approved :: MIT License', 'Operating System :: Microsoft :: Windows', 'Operating System :: Unix', 'Operating System :: MacOS :: MacOS X'],
	package_dir={'': 'src'},
	include_dirs=['kandinsky'],
	install_requires=['pysdl2', 'pysdl2-dll'],
	include_package_data=True,
	python_requires='>=3.6',
)