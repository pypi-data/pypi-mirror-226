from typing import Iterable

import torch.nn


def calc_time(function): ...

def time_to_human(time: float|int) -> str: ...

# def show_progress(now: int, total: int, time_manager: TimeManager=None, length: int=30, icons: str='â–ˆ ') -> None: ...

def cprint(*values: *object, color: str='red', show: bool=True, sep: str=' ', end: str='\n', **kwargs) -> str: ...
def custom_notify(title: str, content: str, color: str|Iterable[str,str], show: bool=True) -> str: ...
def notify(title: str, content: str, style: str, show: bool=True) -> str: ...

def __get_value_in_height_and_width(value: tuple[int,int]|int, value_name: str) -> tuple[int,int]: ...

def _calc_value_after_layer(x: int, k_size: int, stride: int, padding: int) -> int: ...

def calc_feature_size(channel: int, height: int, width: int, sequential: torch.nn.Sequential) -> int: ...


class ActivationFunction:
  @staticmethod
  def sigmoid(x: float) -> float: ...

  @staticmethod
  def tanh(x: float) -> float: ...

  @staticmethod
  def relu(x: float) -> float: ...
