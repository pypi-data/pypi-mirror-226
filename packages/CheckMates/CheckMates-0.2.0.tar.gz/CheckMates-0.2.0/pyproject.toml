
[project]
name = "CheckMates"
version = "0.2.0"
description = "CheckMates is an AutoML library which catches and warns of problems with your data and problem setup before modeling."
authors = [
    {name="Alteryx, Inc.", email="open_source_support@alteryx.com"}
]
maintainers = [
    {name="Alteryx, Inc.", email="open_source_support@alteryx.com"}
]
dependencies = [
    "numpy<=1.23.5,>=1.21.0",
    "pandas>=1.5.0",
    "woodwork>=0.22.0",
    "click>=8.0.0",
    "black[jupyter]>=22.3.0",
]
requires-python = ">=3.8,<4.0"
readme = "README.md"
license = {text = "BSD-3-Clause"}

[project.urls]
"Source Code"= "https://github.com/alteryx/CheckMates/"
"Issue Tracker" = "https://github.com/alteryx/CheckMates/issues"

[project.optional-dependencies]
docs = [
    "docutils<0.17,>=0.15.2",
    "pydata-sphinx-theme>=0.3.1",
    "astroid<=2.6.6",
    "Sphinx>=4.5.0",
    "nbconvert>=6.4.5",
    "nbsphinx<0.9.0,>=0.8.5",
    "sphinx-autoapi>=1.8.3",
    "sphinx-inline-tabs==2022.1.2b11",
    "sphinx-copybutton==0.4.0",
    "myst-parser==0.16.1",
]
dev = [
    "ruff==0.0.228",
]
test = [
    "pytest==7.1.2",
    "coverage[toml]>=6.4",
]

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE"]

[tool.setuptools.packages.find]
namespaces = true

[tool.setuptools.package-data]
"*" = [
    "*.txt",
    "README.md",
]

[tool.setuptools.exclude-package-data]
"*" = [
    "* __pycache__",
    "*.py[co]",
    "docs/*"
]

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.ruff]
line-length = 88
select = [
    "D",
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I001"
]
ignore = ["E501", "D107", "D401"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "F401", "I001", "E501"]
"tests/**" = ["D"]
"datachecks/utils/**" = ["D"]
".github/**" = ["D"]
"docs/**" = ["D"]

[tool.ruff.isort]
known-first-party = ["checkmates"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.coverage.run]
source = ["checkmates"]

[tool.coverage.report]
exclude_lines =[
    "pragma: no cover",
    "raise AssertionError",
    "if __name__ == .__main__.:",
    "if profile:",
    "pytest.skip"
]

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = [
    "tests/*"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]
junit_duration_report = "call"