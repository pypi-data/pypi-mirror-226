# coding: utf-8

"""
    Carrier API

    **Seaplane Global Messaging Service**  For information about authentication see [authentication](/docs/authentication)   # noqa: E501

    The version of the OpenAPI document: 1.0.0-beta
    Contact: support@seaplane.io
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from seaplane.api import schemas  # noqa: F401


class CarrierStreamName(schemas.DictSchema):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    class MetaOapg:
        class properties:
            stream = schemas.StrSchema
            __annotations__ = {
                "stream": stream,
            }

        additional_properties = schemas.NotAnyTypeSchema

    @typing.overload
    def __getitem__(
        self, name: typing_extensions.Literal["stream"]
    ) -> MetaOapg.properties.stream:
        ...

    def __getitem__(self, name: typing.Union[typing_extensions.Literal["stream"],]):
        # dict_instance[name] accessor
        return super().__getitem__(name)

    @typing.overload
    def get_item_oapg(
        self, name: typing_extensions.Literal["stream"]
    ) -> typing.Union[MetaOapg.properties.stream, schemas.Unset]:
        ...

    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["stream"],]):
        return super().get_item_oapg(name)

    def __new__(
        cls,
        *_args: typing.Union[
            dict,
            frozendict.frozendict,
        ],
        stream: typing.Union[
            MetaOapg.properties.stream, str, schemas.Unset
        ] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
    ) -> "CarrierStreamName":
        return super().__new__(
            cls,
            *_args,
            stream=stream,
            _configuration=_configuration,
        )
