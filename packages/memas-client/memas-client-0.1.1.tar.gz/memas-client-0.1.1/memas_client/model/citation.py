# coding: utf-8

"""
    MeMaS DP APIs

    This is the Data Plane client for MeMaS (Memory Management Service).  See https://github.com/memas-ai/MeMaS for more details.  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Contact: max.yu@memas.ai
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from memas_client import schemas  # noqa: F401


class Citation(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            source_uri = schemas.StrSchema
            source_name = schemas.StrSchema
            document_name = schemas.StrSchema
            description = schemas.StrSchema
            __annotations__ = {
                "source_uri": source_uri,
                "source_name": source_name,
                "document_name": document_name,
                "description": description,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source_uri"]) -> MetaOapg.properties.source_uri: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source_name"]) -> MetaOapg.properties.source_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["document_name"]) -> MetaOapg.properties.document_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["source_uri", "source_name", "document_name", "description", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source_uri"]) -> typing.Union[MetaOapg.properties.source_uri, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source_name"]) -> typing.Union[MetaOapg.properties.source_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["document_name"]) -> typing.Union[MetaOapg.properties.document_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["source_uri", "source_name", "document_name", "description", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        source_uri: typing.Union[MetaOapg.properties.source_uri, str, schemas.Unset] = schemas.unset,
        source_name: typing.Union[MetaOapg.properties.source_name, str, schemas.Unset] = schemas.unset,
        document_name: typing.Union[MetaOapg.properties.document_name, str, schemas.Unset] = schemas.unset,
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Citation':
        return super().__new__(
            cls,
            *_args,
            source_uri=source_uri,
            source_name=source_name,
            document_name=document_name,
            description=description,
            _configuration=_configuration,
            **kwargs,
        )
