name: Publish to PyPI

on:
  release:
    types:
      - created

jobs:
  build_wheels_macos:
    name: Build wheels on MacOS
    runs-on: macos-latest
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ matrix.python }}${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-publish
      - name: Install cibuildwheel
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install cibuildwheel

      - name: Format Python version
        run: echo "CIBUILDWHEEL_PYTHON_VERSION=$(echo ${{ matrix.python }} | tr -d .)" >> $GITHUB_ENV

      - name: Build wheels
        env:
          CIBW_BUILD: cp${{ env.CIBUILDWHEEL_PYTHON_VERSION }}-*
          CIBW_ARCHS_MACOS: x86_64 arm64
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_wheels_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-python-${{ matrix.python }}${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-publish
    - name: Install cibuildwheel
      if: steps.cache.outputs.cache-hit != 'true'
      run: pip install cibuildwheel
    - name: Format Python version
      run: echo "CIBUILDWHEEL_PYTHON_VERSION=$(echo ${{ matrix.python }} | tr -d .)" >> $GITHUB_ENV

    - name: Build wheels
      env:
        CIBW_BUILD: cp${{ env.CIBUILDWHEEL_PYTHON_VERSION }}-*
      run: python -m cibuildwheel --output-dir wheelhouse
    - uses: actions/upload-artifact@v3
      with:
        path: ./wheelhouse/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build SDist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  upload_all:
    needs: [build_wheels_macos, build_wheels_linux, make_sdist]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: wheelhouse
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
