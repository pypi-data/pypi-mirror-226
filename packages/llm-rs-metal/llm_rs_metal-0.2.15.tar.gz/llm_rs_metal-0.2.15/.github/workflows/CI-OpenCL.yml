name: CI-OpenCL

env:
    PYPROJECT_NAME: "llm-rs-opencl"

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: pip install -r ./build_scripts/requirements.txt
      - name: Set package name
        run: python ./build_scripts/pyproject_patcher.py 
      - name: Install libssl-dev
        run: sudo apt-get install libssl-dev
      - name: Install clblast
        run: sudo apt install libclblast-dev

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --features clblast
          sccache: 'true'
          container: off
                               
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Install build dependencies
        run: pip install -r ./build_scripts/requirements.txt
      - name: Set package name
        run: python ./build_scripts/pyproject_patcher.py

      - name: Install vcpkg on windows
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
          ls -la
        shell: bash

      - name: Install OpenCL on windows
        run: |
          ${{ github.workspace }}\vcpkg\vcpkg.exe install opencl:x64-windows
        shell: pwsh

      - name: Install CLBlast on windows
        run: |
          ${{ github.workspace }}\vcpkg\vcpkg.exe install clblast:x64-windows
        shell: pwsh

      - name: Set Windows Environment Variables
        run: |
          echo "CLBLAST_PATH=${{ github.workspace }}/vcpkg/packages/clblast_x64-windows" >> $GITHUB_ENV
          echo "OPENCL_PATH=${{ github.workspace }}/vcpkg/packages/opencl_x64-windows" >> $GITHUB_ENV
          echo "${{ github.workspace }}/vcpkg/packages/clblast_x64-windows/bin" >> $GITHUB_PATH
          echo "${{ github.workspace }}/vcpkg/packages/opencl_x64-windows/bin" >> $GITHUB_PATH
        shell: bash

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter --features clblast
          sccache: 'true'

      - name: Include OpenCL DLLs
        run: python ./build_scripts/repair_windows_wheels.py "./dist"

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: wheelhouse

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: pip install -r ./build_scripts/requirements.txt
      - name: Set package name
        run: python ./build_scripts/pyproject_patcher.py 
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
